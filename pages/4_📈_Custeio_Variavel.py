import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

def main():
    st.title("üìà Custeio Vari√°vel (Gerencial) ‚Äì Aprendizado Interativo")

    st.markdown("""
    Bem-vindo √† an√°lise interativa do **Custeio Vari√°vel**!  
    Aqui voc√™ vai entender como esse m√©todo auxilia na **tomada de decis√µes gerenciais**, com simula√ß√µes, exerc√≠cios e compara√ß√µes pr√°ticas.
    """)

    # ===========================
    # Expander 1: M√©todo de Custeio Gerencial
    # ===========================
    with st.expander("üîç 1. M√©todo de Custeio Gerencial", expanded=True):
        st.markdown("""
        ### üí° O que √© Custeio Vari√°vel?
        Tamb√©m chamado de **custeio direto** ou **custeio marginal**, ele separa custos fixos e vari√°veis, tratando os **custos fixos como despesa do per√≠odo** (n√£o s√£o alocados aos produtos).

        ‚úÖ **Vantagens:**
        - Facilita an√°lise de margem de contribui√ß√£o
        - Melhor para decis√µes de curto prazo
        - Evita distor√ß√µes no lucro com varia√ß√µes de estoque

        ‚ùå **Custeio por Absor√ß√£o:**
        - Aloca custos fixos aos produtos
        - Pode inflar o lucro se estoques aumentarem
        """)

        st.subheader("üìå Atividade: Identifique o M√©todo Correto")
        resposta1 = st.radio(
            "Em qual m√©todo o lucro pode aumentar mesmo sem venda, apenas com aumento de produ√ß√£o e estoque?",
            options=["Custeio Vari√°vel", "Custeio por Absor√ß√£o"],
            key="q1"
        )
        if st.button("‚úÖ Verificar Resposta", key="b1"):
            if resposta1 == "Custeio por Absor√ß√£o":
                st.success("Correto! O custeio por absor√ß√£o aloca custos fixos aos produtos, ent√£o aumentar estoque 'empurra' custos para o futuro, inflando o lucro.")
            else:
                st.error("Incorreto. Reveja: no custeio vari√°vel, custos fixos s√£o despesas imediatas, ent√£o n√£o h√° esse efeito.")

    # ===========================
    # Expander 2: Margem de Contribui√ß√£o
    # ===========================
    with st.expander("üìä 2. Margem de Contribui√ß√£o"):
        st.markdown("""
        ### üìà O que √© Margem de Contribui√ß√£o (MC)?
        - **MC = Pre√ßo de Venda - Custo Vari√°vel Unit√°rio**
        - Representa o quanto cada unidade vendida contribui para cobrir custos fixos e gerar lucro.

        **MC Total = MC unit√°ria √ó quantidade**
        """)

        st.subheader("üßÆ Calcule a Margem de Contribui√ß√£o")
        preco_venda = st.number_input("Pre√ßo de Venda Unit√°rio (R$)", min_value=0.0, value=100.0, step=1.0, key="mc_pv")
        custo_var = st.number_input("Custo Vari√°vel Unit√°rio (R$)", min_value=0.0, value=60.0, step=1.0, key="mc_cv")
        qtd_vendida = st.number_input("Quantidade Vendida", min_value=0, value=500, step=10, key="mc_qtd")

        if preco_venda > 0:
            mc_unit = preco_venda - custo_var
            mc_total = mc_unit * qtd_vendida
            st.metric("Margem de Contribui√ß√£o Unit√°ria", f"R$ {mc_unit:.2f}")
            st.metric("Margem de Contribui√ß√£o Total", f"R$ {mc_total:.2f}")

            st.progress(mc_unit / preco_venda if preco_venda > 0 else 0)
            st.caption(f"{(mc_unit / preco_venda * 100):.1f}% do pre√ßo vai para cobrir CF e lucro.")

    # ===========================
    # Expander 3: Elabora√ß√£o de DRE com Custeio Gerencial
    # ===========================
    with st.expander("üìë 3. Elabora√ß√£o de DRE com Custeio Gerencial"):
        st.markdown("""
        ### üßæ Demonstra√ß√£o de Resultados com Custeio Vari√°vel
        Compare com o custeio por absor√ß√£o:
        """)

        receita = st.number_input("Receita Total (R$)", 50000, 200000, 100000, key="dre_receita")
        cv_total = st.number_input("Custos Vari√°veis Totais (R$)", 10000, 80000, 50000, key="dre_cv")
        cf_total = st.number_input("Custos Fixos Totais (R$)", 10000, 60000, 30000, key="dre_cf")

        mc = receita - cv_total
        lucro = mc - cf_total

        dre_df = pd.DataFrame({
            "Descri√ß√£o": [
                "Receita",
                "(-) Custos Vari√°veis",
                "Margem de Contribui√ß√£o",
                "(-) Custos Fixos",
                "Lucro Operacional"
            ],
            "Valor (R$)": [
                f"R$ {receita:,.2f}",
                f"- R$ {cv_total:,.2f}",
                f"R$ {mc:,.2f}",
                f"- R$ {cf_total:,.2f}",
                f"R$ {lucro:,.2f}"
            ]
        })

        st.table(dre_df)

        if lucro > 0:
            st.success("‚úÖ Empresa lucrativa!")
        elif lucro == 0:
            st.info("üü° Ponto de equil√≠brio atingido.")
        else:
            st.warning("‚ö†Ô∏è Preju√≠zo operacional.")

    # ===========================
    # Expander 4: An√°lise CVL e Ponto de Equil√≠brio
    # ===========================
    with st.expander("üìâ 4. An√°lise Custo-Volume-Lucro e Ponto de Equil√≠brio"):
        st.markdown("### üéØ Ponto de Equil√≠brio (Break-Even Point)")

        preco_pe = st.number_input("Pre√ßo Unit√°rio (R$)", 10.0, 200.0, 50.0, key="pe_pv")
        cvu_pe = st.number_input("Custo Vari√°vel Unit√°rio (R$)", 1.0, 150.0, 30.0, key="pe_cvu")
        cf_pe = st.number_input("Custos Fixos Totais (R$)", 1000, 50000, 20000, key="pe_cf")

        if preco_pe > cvu_pe:
            mc_pe = preco_pe - cvu_pe
            pe_qtde = cf_pe / mc_pe
            pe_receita = pe_qtde * preco_pe

            st.metric("Ponto de Equil√≠brio (quantidade)", f"{pe_qtde:.0f} unidades")
            st.metric("Ponto de Equil√≠brio (em receita)", f"R$ {pe_receita:,.2f}")

            # Gr√°fico de CVL
            q_range = np.linspace(0, pe_qtde * 2, 200)
            rt = preco_pe * q_range
            ct = cf_pe + cvu_pe * q_range
            lucro_linha = rt - ct

            fig, ax = plt.subplots(figsize=(8, 5))
            ax.plot(q_range, rt, label="Receita Total", color="green")
            ax.plot(q_range, ct, label="Custo Total", color="red")
            ax.plot(q_range, lucro_linha, label="Lucro", color="blue", linestyle="--")
            ax.axvline(x=pe_qtde, color="purple", linestyle=":", label="Ponto de Equil√≠brio")
            ax.axhline(y=0, color="black", linewidth=0.8)
            ax.set_xlabel("Quantidade")
            ax.set_ylabel("R$")
            ax.legend()
            ax.grid(alpha=0.3)
            st.pyplot(fig)
        else:
            st.error("‚ö†Ô∏è O custo vari√°vel n√£o pode ser maior ou igual ao pre√ßo de venda.")

    # ===========================
    # Expander 5: Margem de Seguran√ßa e Alavancagem
    # ===========================
    with st.expander("üõ°Ô∏è 5. Margem de Seguran√ßa e Alavancagem Operacional"):
        qtde_vendida = st.number_input("Quantidade Vendida Atual", min_value=1, value=1000, key="ms_qtde")
        pe_calc = cf_pe / (preco_pe - cvu_pe) if (preco_pe - cvu_pe) > 0 else 0

        if qtde_vendida > pe_calc:
            ms_percent = ((qtde_vendida - pe_calc) / qtde_vendida) * 100
            st.metric("Margem de Seguran√ßa", f"{ms_percent:.1f}%")
            st.progress(ms_percent / 100)
            st.info(f"A empresa pode reduzir as vendas em {ms_percent:.1f}% antes de entrar no preju√≠zo.")
        else:
            st.warning("‚ö†Ô∏è As vendas est√£o abaixo do ponto de equil√≠brio.")

        # Alavancagem Operacional
        if mc > 0:
            alavancagem = mc / (mc - cf_total) if (mc - cf_total) != 0 else float('inf')
            if alavancagem > 0:
                st.metric("Alavancagem Operacional", f"{alavancagem:.2f}x")
                st.markdown(f"""
                - **Significado:** Um aumento de 1% nas vendas gera um aumento de **{alavancagem:.2f}% no lucro**.
                - Alta alavancagem = maior risco, mas maior retorno potencial.
                """)

    # ===========================
    # Expander 6: Tomada de Decis√£o
    # ===========================
    with st.expander("‚úÖ 6. Tomada de Decis√£o com Custeio Gerencial"):
        st.markdown("""
        ### üß© Exemplo: Aceitar um pedido especial?
        Um cliente oferece comprar 200 unidades a R$ 45,00 cada.  
        Custo vari√°vel unit√°rio: R$ 30,00. Custo fixo n√£o aumenta.  
        Capacidade ociosa dispon√≠vel.
        """)

        decisao = st.radio(
            "Voc√™ aceitaria o pedido?",
            options=["Sim", "N√£o", "Depende"],
            key="decisao_pedido"
        )

        if st.button("üí° Mostrar An√°lise", key="analise_decisao"):
            receita_adicional = 200 * 45
            custo_adicional = 200 * 30
            mc_adicional = receita_adicional - custo_adicional

            st.write(f"- Receita adicional: R$ {receita_adicional:,.2f}")
            st.write(f"- Custo vari√°vel adicional: R$ {custo_adicional:,.2f}")
            st.write(f"- **Margem de Contribui√ß√£o adicional: R$ {mc_adicional:,.2f}**")

            if decisao == "Sim":
                st.success("Correto! Como h√° capacidade ociosa e o pre√ßo > CVU, o pedido aumenta o lucro.")
            else:
                st.info("Reavalie: mesmo com pre√ßo baixo, se cobre o custo vari√°vel e n√£o h√° custo fixo adicional, vale a pena.")

    # ===========================
    # Expander 7: Defici√™ncias do Custeio por Absor√ß√£o
    # ===========================
    with st.expander("‚ö†Ô∏è 7. Defici√™ncias do Custeio por Absor√ß√£o"):
        st.markdown("""
        ### ‚ùå Por que o custeio por absor√ß√£o pode atrapalhar decis√µes?
        - **Efeito do estoque:** lucro sobe com produ√ß√£o (mesmo sem venda)
        - **M√°scara de rentabilidade:** produtos com alto custo fixo podem parecer menos lucrativos
        - **Decis√µes erradas:** pode levar √† manuten√ß√£o de produtos n√£o vi√°veis

        üìå **Exemplo:**
        - Produ√ß√£o: 10.000 unidades, Vendas: 8.000 unidades
        - Custo fixo: R$ 100.000 ‚Üí R$ 10/unidade alocado
        - Lucro cont√°bil: positivo (porque R$ 20.000 de custo fixo est√£o no estoque)
        - Mas caixa n√£o entrou!
        """)

        st.info("üí° O custeio vari√°vel mostra o fluxo real de contribui√ß√£o, melhor para decis√µes de curto prazo.")

    # ===========================
    # Final: Pr√≥xima Etapa
    # ===========================
    st.divider()
    st.markdown("‚úÖ Parab√©ns! Voc√™ completou a an√°lise interativa de Custeio Vari√°vel.")

    if st.button("üëâ Avan√ßar para o pr√≥ximo t√≥pico: Precifica√ß√£o a partir do custo"):
        st.switch_page("pages/5_üí∞_Precificacao.py")

if __name__ == "__main__":
    main()
