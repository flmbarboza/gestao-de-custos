import streamlit as st
import matplotlib.pyplot as plt
from graphviz import Digraph
from utils import leitor_de_texto

def main():
    st.title("üìö Introdu√ß√£o √† Contabilidade de Custos")
    
    # Criando abas para o submenu
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìå Conceitos B√°sicos", 
        "üìä Classifica√ß√£o", 
        "üìà Comportamento", 
        "üß† Quiz"
    ])
    
    with tab1:  # Conceitos B√°sicos
        st.header("Terminologia Fundamental")
       
        st.markdown("""
        Imagine que voc√™ vai abrir uma hamburgueria, um brech√≥ online ou at√© um est√∫dio de cria√ß√£o digital. Antes de pensar no lucro, no pre√ßo que voc√™ vai cobrar ou no quanto vai ganhar, tem uma pergunta crucial:  
        
        > **‚ÄúQuanto custa para eu fazer, oferecer ou entregar isso?‚Äù**  
        
        E √© a√≠ que entra o universo dos **custos**, que s√£o muito mais do que n√∫meros: s√£o a chave para qualquer neg√≥cio ser vi√°vel, competitivo e lucrativo.
        """)

        col1 = st.columns(1)[0]
            
        with col1:
            st.markdown(
                """
                <div style="background-color:#FFD54F; padding:20px; border-radius:12px;
                box-shadow: 2px 2px 8px rgba(0,0,0,0.2)">
                    <h4 style="color:#BF360C;">üìò Terminologia:</h4>
                    <ul style="color:#212121;">
                        <li><b>Gastos</b>
                            <ul>
                                <li>Custos</li>
                                <li>Despesas</li>
                                <li>Investimentos</li>
                                <li>Perda</li>
                            </ul>
                        </li>
                        <li>Desembolso</li>
                    </ul>
                </div>
                """,
                unsafe_allow_html=True
            )

        # Fun√ß√£o para gerar o diagrama com graphviz
        def generate_financial_diagram():
            dot = Digraph(comment='Diagrama Financeiro', format='png')
            dot.attr(rankdir='LR', nodesep='0.5', ranksep='1.0')  # Orienta√ß√£o de esquerda para direita e espa√ßamento entre n√≥s
            dot.attr('node', shape='box', fontsize='12')
        
            # Cluster para o Balan√ßo Patrimonial
            with dot.subgraph(name='cluster_balan√ßo') as c:
                c.attr(label='Balan√ßo Patrimonial', style='dashed')
                c.node('balanco_patrimonial', 'Balan√ßo Patrimonial')
                c.node('custos', 'Custos')
                c.node('produtos_servicos', 'Produtos ou Servi√ßos elaborados')
                c.node('investimentos', 'Investimentos')
        
            # Cluster para a Demonstra√ß√£o de Resultado do Per√≠odo
            with dot.subgraph(name='cluster_resultado') as c:
                c.attr(label='Demonstra√ß√£o de\nResultado do\nPer√≠odo', style='dashed')
                c.node('demonstracao_resultado', 'Demonstra√ß√£o de\nResultado do\nPer√≠odo')
                c.node('despesas', 'Despesas')
        
            # N√≥ independente para Gastos
            dot.node('gastos', 'Gastos')
        
            # Arestas (setas) entre os n√≥s
            dot.edge('balanco_patrimonial', 'custos', label='', arrowhead='vee', arrowsize='1.5')
            dot.edge('custos', 'produtos_servicos', label='', arrowhead='vee', arrowsize='1.5')
            dot.edge('produtos_servicos', 'investimentos', label='', arrowhead='vee', arrowsize='1.5')
            dot.edge('investimentos', 'gastos', label='', arrowhead='vee', arrowsize='1.5')
            dot.edge('demonstracao_resultado', 'despesas', label='', arrowhead='vee', arrowsize='1.5')
            dot.edge('despesas', 'gastos', label='', arrowhead='vee', arrowsize='1.5')
        
            # Notas explicativas
            dot.node('nota_consumo_produto', 'Consumo associado\n√† elabora√ß√£o do\nproduto ou servi√ßo', shape='plaintext', fontsize='10')
            dot.node('nota_consumo_periodo', 'Consumo\nassociado\nao per√≠odo', shape='plaintext', fontsize='10')
            dot.edge('custos', 'nota_consumo_produto', style='dashed', arrowhead='none')
            dot.edge('despesas', 'nota_consumo_periodo', style='dashed', arrowhead='none')
        
            return dot
        
        # Configurando o Streamlit
        st.title("Diagrama Financeiro")
        
        # Gerando o diagrama
        financial_diagram = generate_financial_diagram()
        
        # Exibindo o diagrama no Streamlit
        st.graphviz_chart(financial_diagram)
        
        # Adicionando uma breve descri√ß√£o
        st.markdown(
            """
            **Descri√ß√£o:**
            Este diagrama ilustra o fluxo de custos, despesas e investimentos em um contexto financeiro. 
            - O **Balan√ßo Patrimonial** est√° relacionado aos custos associados √† elabora√ß√£o de produtos ou servi√ßos.
            - A **Demonstra√ß√£o do Resultado do Per√≠odo** aborda as despesas consumidas no per√≠odo.
            - As setas indicam a dire√ß√£o dos fluxos, e as notas explicativas detalham os consumos associados.
            """
        )

        st.markdown("""
        - **Custo:** Gasto relativo √† produ√ß√£o de bens/servi√ßos
        - **Despesa:** Gasto com administra√ß√£o/vendas
        - **Investimento:** Gasto ativado (benef√≠cio futuro)
        """)
        
        if st.button("Ouvir explica√ß√£o", key="audio1"):
            texto = "Terminologia: Custo √© o gasto relativo √† produ√ß√£o, Despesa √© o gasto com administra√ß√£o"
            leitor_de_texto(texto)
    
    with tab2:  # Classifica√ß√£o
        st.header("Classifica√ß√£o de Custos")
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            **Por Natureza:**
            - Mat√©ria-prima
            - M√£o de obra
            - Custos indiretos
            """)
        
        with col2:
            st.markdown("""
            **Por Comportamento:**
            - Fixos (n√£o variam com produ√ß√£o)
            - Vari√°veis (variam proporcionalmente)
            - Mistos (parte fixa + parte vari√°vel)
            """)
        
        st.image("https://i.imgur.com/JQH90yl.png", width=400)
    
    with tab3:  # Comportamento
        st.header("An√°lise do Comportamento")
        st.markdown("""
        ```math
        Custo\ Total = Custo\ Fixo + (Custo\ Vari√°vel\ Unit√°rio √ó Quantidade)
        ```
        """)
        
        cf = st.slider("Custo Fixo Total (R$):", 1000, 50000, 10000)
        cv = st.slider("Custo Vari√°vel Unit√°rio (R$):", 1, 100, 15)
        q = st.slider("Quantidade Produzida:", 0, 1000, 200)
        
        ct = cf + (cv * q)
        st.metric("Custo Total Estimado", f"R$ {ct:,.2f}")
    
    with tab4:  # Quiz
        st.header("Teste Seu Conhecimento")
        
        respostas = st.session_state.get('respostas', {})
        
        # Pergunta 1
        q1 = st.radio(
            "1. O aluguel da f√°brica √© classificado como:",
            ["Custo Fixo", "Custo Vari√°vel", "Despesa Fixa"],
            index=None
        )
        
        # Pergunta 2
        q2 = st.radio(
            "2. Mat√©ria-prima consumida na produ√ß√£o √©:",
            ["Custo Direto Vari√°vel", "Custo Indireto", "Investimento"],
            index=None
        )
        
        if st.button("Verificar Respostas"):
            respostas['q1'] = q1 == "Custo Fixo"
            respostas['q2'] = q1 == "Custo Direto Vari√°vel"
            st.session_state.respostas = respostas
            
            if all(respostas.values()):
                st.success("‚úÖ Parab√©ns! Todas corretas!")
            else:
                erros = [f"Pergunta {i+1}" for i, v in enumerate(respostas.values()) if not v]
                st.warning(f"Revise: {', '.join(erros)}")

if __name__ == "__main__":
    main()
