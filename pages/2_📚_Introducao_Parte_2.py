import streamlit as st
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle, Ellipse
from utils import leitor_de_texto

def main():
    st.title("üìö Introdu√ß√£o √† Contabilidade de Custos")
    
    # Criando abas para o submenu
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìå Conceitos B√°sicos", 
        "üìä Classifica√ß√£o", 
        "üìà Comportamento", 
        "üß† Quiz"
    ])
    
    with tab1:  # Conceitos B√°sicos
        st.header("Terminologia Fundamental")
       
        st.markdown("""
        Imagine que voc√™ vai abrir uma hamburgueria, um brech√≥ online ou at√© um est√∫dio de cria√ß√£o digital. Antes de pensar no lucro, no pre√ßo que voc√™ vai cobrar ou no quanto vai ganhar, tem uma pergunta crucial:  
        
        > **‚ÄúQuanto custa para eu fazer, oferecer ou entregar isso?‚Äù**  
        
        E √© a√≠ que entra o universo dos **custos**, que s√£o muito mais do que n√∫meros: s√£o a chave para qualquer neg√≥cio ser vi√°vel, competitivo e lucrativo.
        """)

        col1 = st.columns(1)[0]
            
        with col1:
            st.markdown(
                """
                <div style="background-color:#FFD54F; padding:20px; border-radius:12px;
                box-shadow: 2px 2px 8px rgba(0,0,0,0.2)">
                    <h4 style="color:#BF360C;">üìò Terminologia:</h4>
                    <ul style="color:#212121;">
                        <li><b>Gastos</b>
                            <ul>
                                <li>Custos</li>
                                <li>Despesas</li>
                                <li>Investimentos</li>
                                <li>Perda</li>
                            </ul>
                        </li>
                        <li>Desembolso</li>
                    </ul>
                </div>
                """,
                unsafe_allow_html=True
            )

        plt.figure(figsize=(10, 8))
        ax = plt.gca()
        
        # Elementos principais
        ax.add_patch(Ellipse((0.5, 0.9), 0.3, 0.1, fill=True, color='lightblue'))
        plt.text(0.5, 0.9, 'Balan√ßo Patrimonial', ha='center', va='center')
        
        # Linhas principais
        plt.plot([0.5, 0.3], [0.85, 0.7], 'k-')  # Esquerda
        plt.plot([0.5, 0.5], [0.85, 0.7], 'k-')  # Centro
        plt.plot([0.5, 0.7], [0.85, 0.7], 'k-')  # Direita
        
        # Caixas de n√≠vel 1
        ax.add_patch(Rectangle((0.2, 0.6), 0.2, 0.1, fill=True, color='lightgrey'))
        plt.text(0.3, 0.65, 'Custos', ha='center', va='center')
        
        ax.add_patch(Rectangle((0.4, 0.6), 0.2, 0.1, fill=True, color='lightgrey'))
        plt.text(0.5, 0.65, 'Investimentos', ha='center', va='center')
        
        ax.add_patch(Rectangle((0.6, 0.6), 0.2, 0.1, fill=True, color='lightgrey'))
        plt.text(0.7, 0.65, 'Gastos', ha='center', va='center')
        
        # Linhas para n√≠vel 2
        plt.plot([0.3, 0.2], [0.6, 0.45], 'k-')
        plt.plot([0.3, 0.3], [0.6, 0.45], 'k-')
        plt.plot([0.5, 0.4], [0.6, 0.45], 'k-')
        plt.plot([0.5, 0.6], [0.6, 0.45], 'k-')
        
        # Caixas de n√≠vel 2
        ax.add_patch(Rectangle((0.1, 0.35), 0.2, 0.1, fill=True, color='lightgrey'))
        plt.text(0.2, 0.4, 'Consumo associado\nao produto/servi√ßo', ha='center', va='center', fontsize=8)
        
        ax.add_patch(Rectangle((0.25, 0.35), 0.2, 0.1, fill=True, color='lightgrey'))
        plt.text(0.35, 0.4, 'Produtos ou\nServi√ßos elaborados', ha='center', va='center', fontsize=8)
        
        ax.add_patch(Rectangle((0.35, 0.35), 0.2, 0.1, fill=True, color='lightgrey'))
        plt.text(0.45, 0.4, 'Inventivos', ha='center', va='center', fontsize=8)
        
        ax.add_patch(Rectangle((0.55, 0.35), 0.2, 0.1, fill=True, color='lightgrey'))
        plt.text(0.65, 0.4, 'Concurso associado\nao per√≠odo', ha='center', va='center', fontsize=8)
        
        plt.axis('off')
        plt.tight_layout()
        plt.show()
        
        st.markdown("""
        - **Custo:** Gasto relativo √† produ√ß√£o de bens/servi√ßos
        - **Despesa:** Gasto com administra√ß√£o/vendas
        - **Investimento:** Gasto ativado (benef√≠cio futuro)
        """)
        
        if st.button("Ouvir explica√ß√£o", key="audio1"):
            texto = "Terminologia: Custo √© o gasto relativo √† produ√ß√£o, Despesa √© o gasto com administra√ß√£o"
            leitor_de_texto(texto)
    
    with tab2:  # Classifica√ß√£o
        st.header("Classifica√ß√£o de Custos")
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            **Por Natureza:**
            - Mat√©ria-prima
            - M√£o de obra
            - Custos indiretos
            """)
        
        with col2:
            st.markdown("""
            **Por Comportamento:**
            - Fixos (n√£o variam com produ√ß√£o)
            - Vari√°veis (variam proporcionalmente)
            - Mistos (parte fixa + parte vari√°vel)
            """)
        
        st.image("https://i.imgur.com/JQH90yl.png", width=400)
    
    with tab3:  # Comportamento
        st.header("An√°lise do Comportamento")
        st.markdown("""
        ```math
        Custo\ Total = Custo\ Fixo + (Custo\ Vari√°vel\ Unit√°rio √ó Quantidade)
        ```
        """)
        
        cf = st.slider("Custo Fixo Total (R$):", 1000, 50000, 10000)
        cv = st.slider("Custo Vari√°vel Unit√°rio (R$):", 1, 100, 15)
        q = st.slider("Quantidade Produzida:", 0, 1000, 200)
        
        ct = cf + (cv * q)
        st.metric("Custo Total Estimado", f"R$ {ct:,.2f}")
    
    with tab4:  # Quiz
        st.header("Teste Seu Conhecimento")
        
        respostas = st.session_state.get('respostas', {})
        
        # Pergunta 1
        q1 = st.radio(
            "1. O aluguel da f√°brica √© classificado como:",
            ["Custo Fixo", "Custo Vari√°vel", "Despesa Fixa"],
            index=None
        )
        
        # Pergunta 2
        q2 = st.radio(
            "2. Mat√©ria-prima consumida na produ√ß√£o √©:",
            ["Custo Direto Vari√°vel", "Custo Indireto", "Investimento"],
            index=None
        )
        
        if st.button("Verificar Respostas"):
            respostas['q1'] = q1 == "Custo Fixo"
            respostas['q2'] = q1 == "Custo Direto Vari√°vel"
            st.session_state.respostas = respostas
            
            if all(respostas.values()):
                st.success("‚úÖ Parab√©ns! Todas corretas!")
            else:
                erros = [f"Pergunta {i+1}" for i, v in enumerate(respostas.values()) if not v]
                st.warning(f"Revise: {', '.join(erros)}")

if __name__ == "__main__":
    main()
