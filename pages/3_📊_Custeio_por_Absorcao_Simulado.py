import streamlit as st
import pandas as pd

def main():
    st.title("üìù Simulador de Prova - Custeio por Absor√ß√£o")
    st.markdown("""
    Teste seus conhecimentos sobre custeio por absor√ß√£o b√°sico e avan√ßado.
    *Responda todas as quest√µes e verifique seu resultado no final.*
    """)
    
    # Sistema de pontua√ß√£o
    if 'score' not in st.session_state:
        st.session_state.score = 0
        st.session_state.answers = {}
    
    # Quest√µes
    questions = [
        {
            "type": "multiple_choice",
            "question": "1. Qual a f√≥rmula correta do Custo de Produ√ß√£o do Per√≠odo (CPP)?",
            "options": [
                "MP + MOD + CIF",
                "CPA + EIPA - EFPA",
                "CPP + EIPP - EFPP",
                "MOD + EI - EF"
            ],
            "answer": 0,
            "explanation": "O CPP √© a soma de Mat√©ria-Prima (MP), M√£o de Obra Direta (MOD) e Custos Indiretos de Fabrica√ß√£o (CIF)."
        },
        {
            "type": "true_false",
            "question": "2. No custeio por absor√ß√£o, os custos fixos podem ser rateados usando o volume produzido como crit√©rio de rateio.",
            "answer": True,
            "explanation": "Verdadeiro. Essa √© uma caracter√≠stica considerada mais simples do custeio por absor√ß√£o, por√©m √© aplic√°vel."
        },
        {
            "type": "calculation",
            "question": "3. Uma empresa teve: MP R\$ 50.000, MOD R\$ 30.000, CIF R\$ 20.000. Qual o CPP?",
            "answer": 100000,
            "tolerance": 0,
            "explanation": "CPP = MP + MOD + CIF = 50.000 + 30.000 + 20.000 = R$ 100.000"
        },
        {
            "type": "multiple_choice",
            "question": "4. Qual destes N√ÉO √© um crit√©rio comum para rateio de CIF?",
            "options": [
                "Horas-m√°quina",
                "N√∫mero de funcion√°rios",
                "√Årea ocupada",
                "Cor preferida do gerente"
            ],
            "answer": 3,
            "explanation": "Crit√©rios de rateio devem ser objetivos e mensur√°veis, n√£o subjetivos como prefer√™ncias pessoais."
        },
        {
            "type": "case_analysis",
            "question": "5. Uma f√°brica produziu 1.000 unidades com CPA de R\$ 80.000 e vendeu 800 unidades. Se o EIPA era R\$ 10.000, qual o CPV?",
            "answer": 74000,
            "tolerance": 0,
            "explanation": "CPV = (CPA / Unidades Produzidas) √ó Unidades Vendidas + EIPA - EFPA\n= (80.000/1.000)√ó800 + 10.000 - (80.000/1.000√ó200) = R\$ 74.000"
        }
    ]
    
    # Formul√°rio de quest√µes
    with st.form("test_form"):
        st.subheader("Quest√µes")
        
        for i, q in enumerate(questions):
            st.markdown(f"**{q['question']}**")
            
            if q['type'] == 'multiple_choice':
                user_answer = st.radio(
                    f"Op√ß√µes Q{i+1}",
                    q['options'],
                    index=None,
                    key=f"q{i}"
                )
                st.session_state.answers[i] = q['options'].index(user_answer) if user_answer else None
                
            elif q['type'] == 'true_false':
                user_answer = st.radio(
                    f"Verdadeiro/Falso Q{i+1}",
                    ["Verdadeiro", "Falso"],
                    index=None,
                    key=f"q{i}"
                )
                st.session_state.answers[i] = (user_answer == "Verdadeiro") if user_answer else None
                
            elif q['type'] in ['calculation', 'case_analysis']:
                user_answer = st.number_input(
                    f"Resposta Q{i+1} (R$)",
                    value=None,
                    step=1000,
                    key=f"q{i}"
                )
                st.session_state.answers[i] = user_answer if user_answer is not None else None
        
        submitted = st.form_submit_button("üì• Submeter Respostas")
    
    # Corre√ß√£o
    if submitted:
        st.session_state.score = 0
        st.divider()
        st.subheader("üîç Resultado")
        
        for i, q in enumerate(questions):
            st.markdown(f"**Q{i+1}:** {q['question']}")
            
            if st.session_state.answers.get(i) is None:
                st.error("N√£o respondida")
                continue
            
            if q['type'] in ['multiple_choice', 'true_false']:
                if st.session_state.answers[i] == q['answer']:
                    st.success(f"‚úÖ Correta! {q['explanation']}")
                    st.session_state.score += 1
                else:
                    correct = q['options'][q['answer']] if q['type'] == 'multiple_choice' else "Verdadeiro" if q['answer'] else "Falso"
                    st.error(f"‚ùå Incorreta. Resposta correta: {correct}. {q['explanation']}")
            
            elif q['type'] in ['calculation', 'case_analysis']:
                tolerance = q.get('tolerance', 0.01 * q['answer'])
                if abs(st.session_state.answers[i] - q['answer']) <= tolerance:
                    st.success(f"‚úÖ Correta! {q['explanation']}")
                    st.session_state.score += 1
                else:
                    st.error(f"‚ùå Incorreta. Resposta correta: R$ {q['answer']:,.2f}. {q['explanation']}")
        
        # Resultado final
        st.divider()
        score_percent = (st.session_state.score / len(questions)) * 100
        st.metric("Pontua√ß√£o Final", 
                 f"{st.session_state.score}/{len(questions)} ({score_percent:.0f}%)")
        
        if score_percent >= 70:
            st.success("üéâ Parab√©ns! Voc√™ domina o custeio por absor√ß√£o!")
        elif score_percent >= 40:
            st.warning("üìö Bom esfor√ßo! Reveja os conceitos e tente novamente!")
        else:
            st.error("‚úèÔ∏è Estude mais os fundamentos antes de tentar novamente.")
        
        # Sugest√µes de estudo
        st.markdown("""
        **Recursos recomendados:**
        - Cap√≠tulos 5 e 6 do livro 'Contabilidade de Custos' do Prof. Eliseu Martins;
        - Cap√≠tulos 2 e 4 do livro 'S√©rie Desvendando as Finan√ßas - Administra√ß√£o Custos Pre√ßos Lucros' do Prof. Bruni;
        - Unidade 2 do livro 'An√°lise de Custo' de Aline Alves e colaboradores; e,
        - Parte I do livro 'An√°lise de custos: uma abordagem simples e objetiva' de Eduardo F. Lyrio e colaboradores.
        """)
    
    # Navega√ß√£o
    st.divider()
    cols = st.columns(3)
    with cols[0]:
        if st.button("‚¨ÖÔ∏è Voltar ao Custeio por Absor√ß√£o"):
            st.switch_page("pages/3_üìä_Custeio_por_Absorcao_I.py")
    with cols[1]:
        if st.button("üìä Avan√ßar para Custeio Vari√°vel"):
            st.switch_page("pages/4_üìà_Custeio_Variavel.py")
    with cols[2]:
        subcol1, subcol2 = st.columns([3,1])  # 3:1 ratio
        with subcol2:
            if st.button("üîÑ Refazer Teste"):
                st.session_state.score = 0
                st.session_state.answers = {}
                st.rerun()

if __name__ == "__main__":
    main()
