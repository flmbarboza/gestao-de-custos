import streamlit as st
from datetime import datetime
from utils import leitor_de_texto, get_anon_user_id, log_acesso_google, log_interacao_google

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Gest√£o de Custos Academy",
    page_icon="üè¶",
    layout="centered"
)

# === REGISTRA O ACESSO (APENAS UMA VEZ POR SESS√ÉO) ===
nome_usuario = get_anon_user_id()
pagina = "P√°gina de Abertura"

if 'home_acessada' not in st.session_state:
    log_acesso_google(nome_usuario, pagina, acao="acessou_home")
    st.session_state.home_acessada = True

# Evita reexecu√ß√£o
if 'redirecionado' not in st.session_state:
    st.session_state.redirecionado = False

if not st.session_state.redirecionado:
    st.session_state.redirecionado = True

    # === T√çTULO E BOAS-VINDAS DIN√ÇMICAS ===
    st.markdown("<h1 style='text-align: center;'>üè¶ Gest√£o de Custos <span style='color:#27ae60'>Academy</span></h1>", unsafe_allow_html=True)
    st.markdown("<h3 style='text-align: center; color: #2C3E50;'>Onde n√∫meros viram poder de decis√£o</h3>", unsafe_allow_html=True)

    st.markdown("""
    <div style='text-align: center; font-size: 1.1em; color: #34495E; margin-bottom: 20px;'>
        Voc√™ j√° parou pra pensar que <strong>o maior erro de gest√£o</strong> n√£o √© perder dinheiro...<br>
        <strong>√â achar que est√° economizando quando, na verdade, est√° destruindo valor?</strong>
    </div>
    """, unsafe_allow_html=True)

    st.image("pages/figs/welcome.png")

    st.success(f"""üîê Dados an√¥nimos. Usamos isso para tornar a experi√™ncia melhor ‚Äî nada pessoal, tudo pedag√≥gico.
                Assim come√ßa sua miss√£o! Toda sua jornada contribui para melhorar esse site. 
                Vamos usar um c√≥digo de identifica√ß√£o para voc√™ `{nome_usuario[:8]}`. Caso queira saber mais sobre isso, contate o idealizador.""")
    
    # === QUIZ R√ÅPIDO (para engajar desde o in√≠cio) ===
    with st.form("test_form"):
        st.info("üéØ Teste r√°pido: Voc√™ entende de custos?")
    
        # --- quest√£o (estrutura solicitada) ---
        question = [
            {
                "type": "multiple_choice",
                "question": "Se uma empresa vende mais, mas lucra menos, o problema provavelmente √©:",
                "options": [
                    "A) Falta de marketing",
                    "B) Pre√ßo baixo demais",
                    "C) Custo mal calculado ou mal alocado",
                    "D) Crise econ√¥mica"
                ],
                "answer": 2,  # √≠ndice correto
                "explanation": "O n√∫cleo da Gest√£o de Custos est√° em entender e alocar corretamente os custos."
            }
        ]
    
        # pega a primeira (√∫nica) quest√£o para o quiz r√°pido
        q = question[0]
    
        # --- estado minimalista e seguro ---
        if "quiz_done" not in st.session_state:
            st.session_state.quiz_done = False
            st.session_state.quiz_choice = None
    
        page_name = st.session_state.get("pagina", "P√°gina de Abertura")
    
        # wrapper seguro para logging (garante que falha no logger n√£o quebre a UI)
        def safe_log_interacao(nome, pagina, acao):
            try:
                log_interacao_google(nome=nome, pagina=pagina, acao=acao)
            except Exception:
                # falha silenciosa no log para n√£o interromper o app
                pass
    
        st.markdown(f"**{q['question']}**")
    
        # --- formul√°rio simples ---
        with st.form("quiz_form"):
            choices = ["-- Selecione --"] + q["options"]
            escolha = st.selectbox("Escolha uma op√ß√£o:", choices, index=0, key="quiz_select_0")
            enviar = st.form_submit_button("‚úÖ Verificar resposta")
    
        # --- processamento do submit ---
        if enviar:
            if escolha == "-- Selecione --":
                st.warning("‚ö†Ô∏è Por favor, selecione uma op√ß√£o antes de verificar!")
                safe_log_interacao(nome_usuario, page_name, "quiz_sem_resposta")
            else:
                idx = q["options"].index(escolha)  # mapeia para √≠ndice dentro de q['options']
                st.session_state.quiz_choice = idx
                st.session_state.quiz_done = True
    
                if idx == q["answer"]:
                    st.success("üî• Acertou! " + q.get("explanation", ""))
                    st.balloons()
                    safe_log_interacao(nome_usuario, page_name, "quiz_acertou")
                else:
                    st.warning(f"üí° Quase! Resposta correta: {q['options'][q['answer']]}.")
                    st.info(q.get("explanation", ""))
                    safe_log_interacao(nome_usuario, page_name, "quiz_errou")
    
        # --- se j√° respondeu em sess√£o anterior, reapresenta feedback ---
        elif st.session_state.quiz_done:
            idx = st.session_state.quiz_choice
            if idx == q["answer"]:
                st.success("üî• Acertou! " + q.get("explanation", ""))
            else:
                st.warning(f"üí° Resposta correta: {q['options'][q['answer']]}.")
                st.info(q.get("explanation", ""))

    # === INSIGHTS PROVOCATIVOS (com expanders interativos) ===
    st.markdown("### üî• O que os melhores gestores sabem (e os outros n√£o percebem)")

    with st.expander("üìâ Produtividade > Corte de gastos", expanded=False):
        st.markdown("""
        Cortar custos √© f√°cil. **Receber mais com menos √© arte.**  
        Empresas de alta performance focam em **produtividade real**, n√£o em demiss√µes.  
        ‚Üí [McKinsey: The Productivity Imperative](https://www.mckinsey.com/featured-insights/productivity/driving-productivity-imperative)
        """)
        if st.button("‚úÖ Entendi: produtividade √© estrat√©gia", key="produtividade"):
            log_interacao_google(nome_usuario, pagina, "expandiu_produtividade")

    with st.expander("ü§ñ IA e Automa√ß√£o: o novo 'corte de custos'", expanded=False):
        st.markdown("""
        Automatizar processos de custos com IA pode reduzir tempo em 70%.  
        Mas o grande ganho? **Libera tempo para an√°lise estrat√©gica.**  
        ‚Üí [McKinsey: State of AI 2023](https://www.mckinsey.com/capabilities/quantumblack/our-insights/the-state-of-ai-in-2023)
        """)
        if st.button("‚úÖ Entendi: IA √© aliada, n√£o substituta", key="ia"):
            log_interacao_google(nome_usuario, pagina, "expandiu_ia")

    with st.expander("üõí Cost-to-Serve: o segredo dos lucros ocultos", expanded=False):
        st.markdown("""
        Muitas empresas crescem... e perdem dinheiro.  
        Por qu√™? **Clientes 'grandes' podem ser os mais caros.**  
        Mapear o custo por cliente √© essencial.  
        ‚Üí [Gartner: Cost Optimization](https://www.gartner.com/en/insights/cost-optimization)
        """)
        if st.button("‚úÖ Entendi: nem todo cliente √© lucrativo", key="cost_to_serve"):
            log_interacao_google(nome_usuario, pagina, "expandiu_cost_to_serve")

    with st.expander("üåç Benchmarks: o que as top financeiras fazem", expanded=False):
        st.markdown("""
        Fun√ß√µes financeiras de elite gastam apenas **0,66% da receita** com opera√ß√µes.  
        O resto vai para inova√ß√£o, an√°lise e estrat√©gia.  
        ‚Üí [The Hackett Group](https://www.thehackettgroup.com/)
        """)
        if st.button("‚úÖ Entendi: efici√™ncia gera espa√ßo para inova√ß√£o", key="benchmark"):
            log_interacao_google(nome_usuario, pagina, "expandiu_benchmark")

    # === CHAMADA PARA USAR IA (intera√ß√£o real e moderna) ===
    with st.expander(" üí¨ Quer conversar com quem entende de custos? (sem cobrar hora)", expanded=False):
        if st.button("ü§ñ Pergunte √† IA sobre Gest√£o de Custos"):
            st.info("""
            üîç Abra seu chat favorito (Copilot, Gemini, ChatGPT) e pergunte:
            
            > _"Como calcular o custo real de um produto que tem produ√ß√£o terceirizada e log√≠stica vari√°vel?"_
            
            > _"Quais s√£o os 3 erros mais comuns na precifica√ß√£o com base em custos?"_
            
            ‚úÖ Use a IA como **tutora**, mas **voc√™ √© o estrategista**.
            """)
            log_interacao_google(nome_usuario, pagina, "dica_ia_usada")

    # === V√çDEOS RECOMENDADOS (com mini-descri√ß√µes) ===
    st.markdown("### üé• Aprenda r√°pido com v√≠deos pr√°ticos")
    videos = {
        "Introdu√ß√£o √† Gest√£o de Custos (PT-BR)": "https://youtu.be/Dykj7QoifPM?si=7xVwzljWUi560Acq",
        "Cost-to-Serve em a√ß√£o (EN)": "https://youtu.be/FZsikxMiDak?si=0beG90FrQQWHzk9D"
    }
    for nome, link in videos.items():
        if st.button(f"‚ñ∂Ô∏è Assistir: {nome}", key=f"btn_{nome}"):
            st.video(link)
            log_interacao_google(nome_usuario, pagina, f"assistiu_video_{nome}")

    # === ESCOLHA DO CAMINHO (interatividade com prop√≥sito) ===
    st.markdown("---")
    st.markdown("### üß≠ Por onde voc√™ quer come√ßar?")
    caminho = st.radio(
        "Escolha seu estilo de aprendizagem:",
        [
            "üöÄ R√°pido e pr√°tico ‚Äì quero resolver problemas reais",
            "üß† Profundo e estrat√©gico ‚Äì quero entender o sistema todo",
            "üìä Anal√≠tico e t√©cnico ‚Äì quero dominar os c√°lculos"
        ]
    )

    if st.button("‚û°Ô∏è Iniciar minha jornada", key="btn_inicio"):
        log_interacao_google(nome_usuario, pagina, f"escolheu_caminho_{caminho.split('‚Äì')[0].strip()}")
        st.session_state.caminho_escolhido = caminho
        st.switch_page("pages/1_üè†_Inicio.py")

# === FOOTER ELEGANTE E PROFISIONAL ===
st.sidebar.markdown("---")
st.sidebar.markdown("""
<div style='text-align: center; color: gray; font-size: 12px; line-height: 1.5;'>
    <strong>Gest√£o de Custos Academy</strong><br>
    <em>vers√£o beta | 2025</em><br><br>
    Desenvolvido para a disciplina de<br>
    <strong>Gest√£o de Custos</strong><br>
    FAGEN / UFU<br><br>
    üåê Conectando teoria, pr√°tica e futuro
</div>
""", unsafe_allow_html=True)
