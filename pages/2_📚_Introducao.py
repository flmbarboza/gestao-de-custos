import streamlit as st
import numpy as np
import pandas as pd
import graphviz
import matplotlib.pyplot as plt
import plotly.express as px
from matplotlib.patches import Rectangle, FancyBboxPatch
from utils import leitor_de_texto, get_anon_user_id, log_acesso_google, log_interacao_google, safe_log_interacao

def main():
    st.title("üìö Introdu√ß√£o √† Contabilidade de Custos")

    # Recupera o nome do usu√°rio
    nome_usuario = get_anon_user_id()
    pagina_atual = "Introdu√ß√£o a Custos"
    
    # Registra o acesso
    if 'page2_acessada' not in st.session_state:
        log_acesso_google(nome_usuario, pagina_atual, f"acessou_{pagina_atual}")
        st.session_state.page2_acessada = True

    with st.expander("üéØ Objetivos da Unidade", expanded=False):
        st.markdown("""
        - Compreender terminologia b√°sica de custos
        - Classificar custos por natureza e comportamento
        - Analisar o comportamento de custos
        """)    
    
        # Registra navega√ß√£o
        if st.button("‚úÖ Clique aqui se essa informa√ß√£o foi √∫til", key="obj_intro"):
            safe_log_interacao(nome_usuario, pagina_atual, "viu_objetivos_introducao")

    # Criando abas para o submenu
    tab0, tab1, tab2, tab3, tab4 = st.tabs([
        "üí° Idea√ß√£o", "üìå Conceitos B√°sicos", 
        "üìä Classifica√ß√£o", 
        "üìà Comportamento", 
        "üß† Quiz"
    ])
    
    with tab0:  # Conceitos B√°sicos    
        st.markdown("""
            # üí• Qual √© o problema?
            
            Imagine que voc√™ est√° no comando.  
            Pode ser de uma ind√∫stria. De um e-commerce. De um sal√£o de beleza, uma startup de tecnologia, um restaurante, uma cl√≠nica ou at√© mesmo de uma reparti√ß√£o p√∫blica.
            
            Tudo parece andar: clientes chegando, produto sendo entregue, dinheiro entrando...
            
            Mas, de repente, a realidade bate:  
            üìâ **O lucro n√£o aparece.**  
            üìä **Os n√∫meros n√£o fecham.**  
            üí∏ **Os recursos evaporam.**
            
            E a√≠ vem a pergunta que assombra muitos gestores:  
            **‚ÄúEstamos vendendo bem‚Ä¶ mas por que estamos no vermelho?‚Äù**
            
            ---
            
            ## üéØ A resposta muitas vezes est√° em uma palavra: **custos**.
            
            Saber seus custos **n√£o √© opcional**.  
            √â quest√£o de **sobreviv√™ncia**.  
            √â o que separa neg√≥cios sustent√°veis daqueles que apagam as luzes antes de completar o segundo ano.
            
            Sem gest√£o de custos, voc√™:
            
            - ‚úÖ Precifica seus produtos ou servi√ßos **de forma errada**.  
            - ‚úÖ **Investe mal**, alocando recursos onde n√£o h√° retorno.  
            - ‚úÖ **Desperdi√ßa** dinheiro, tempo e energia.  
            - ‚úÖ **Perde competitividade** e mercado.  
            - ‚úÖ **Pode quebrar** ‚Äî mesmo com vendas em alta!
            
            ---
            
            ## üö® Um alerta baseado em dados:
            
            > Segundo o [BigDataCorp](https://blog.bigdatacorp.com.br/brasil-abriu-mais-de-60-milhoes-de-empresas-aponta-pesquisa/), **quase 80% das empresas brasileiras fecham em at√© 4 anos**, e um dos principais motivos √© a **falta de controle e an√°lise de custos**.
            
            Isso acontece porque muitos confundem **faturamento com lucro**.  
            Outros nem sabem quanto realmente custa **produzir, vender ou entregar seu servi√ßo**.
            
            > üîç **Coment√°rio acad√™mico:** Pesquisas como a de [Artuzo et al. (2018)](https://doi.org/10.7819/rbgn.v20i2.3192) demonstram que at√© em setores altamente estruturados, como o agroneg√≥cio de milho e soja, a **aus√™ncia de pr√°ticas adequadas de gest√£o de custos leva produtores a enfrentar s√©rios desafios de rentabilidade, competitividade e sustentabilidade.**  
            > O estudo revela que muitos tomam decis√µes com base na experi√™ncia ou na intui√ß√£o, mas **sem dados precisos sobre seus custos, ficam vulner√°veis √†s oscila√ß√µes de mercado, ao aumento dos insumos e √†s press√µes por pre√ßos.**  
            > Se isso ocorre em neg√≥cios com grande escala e tradi√ß√£o, imagine nas empresas de servi√ßos, com√©rcio, startups ou organiza√ß√µes p√∫blicas.
            
            ---
            
            ## üß≠ Custo n√£o √© s√≥ n√∫mero. √â estrat√©gia.
            
            Gerenciar custos √©:
            
            - üîç Entender **onde e como o dinheiro √© consumido**.  
            - üéØ Decidir com intelig√™ncia ‚Äî **produzir mais? terceirizar? mudar pre√ßo? demitir? investir?**  
            - üèÜ Alcan√ßar **lucro com sustentabilidade**.  
            - üìà Tornar sua organiza√ß√£o **mais eficiente, competitiva e resiliente**.
            
            ---
            
            ## üöÄ Pronto para dominar esse tema?
            
            Neste m√≥dulo, voc√™ vai aprender:
            
            - ‚úîÔ∏è üîç Em detalhes, a terminologia completa que envolve a gest√£o de custos.
            - ‚úîÔ∏è üìã Classificar os custos por natureza (origem) e comportamento (volume).
            - ‚úîÔ∏è üìà Analisar como os custos se comportam em diferentes n√≠veis de atividade.
            
            Vamos juntos transformar n√∫meros em **decis√µes estrat√©gicas**.
            
            Porque custo **n√£o √© um problema de contabilidade**.  
            √â uma **ferramenta de gest√£o inteligente**.

            V√° para o topo dessa p√°gina e clique em **üìå Conceitos B√°sicos** para continuar!
        """)
        #Registra navega√ß√£o
        if st.button("‚úÖ Clique aqui se essa informa√ß√£o foi √∫til", key="intro_context"):
             safe_log_interacao(nome_usuario, pagina_atual, "viu_intro_contexto")

    with tab1:  # Conceitos B√°sicos    
        st.header("Terminologia")

        st.markdown("""
        Imagine que voc√™ vai abrir uma hamburgueria, um brech√≥ online ou at√© um est√∫dio de cria√ß√£o digital. Antes de pensar no lucro, no pre√ßo que voc√™ vai cobrar ou no quanto vai ganhar, tem uma pergunta crucial:  
        
        > **‚ÄúQuanto custa para eu fazer, oferecer ou entregar isso?‚Äù**  
        
        E √© a√≠ que entra o universo dos **custos**, que s√£o muito mais do que n√∫meros: s√£o a chave para qualquer neg√≥cio ser vi√°vel, competitivo e lucrativo. 

        Entretanto, nem tudo que se gasta √© chamado de custo. Assim, vamos conhecer os termos corretos.
        """)

        col1 = st.columns(1)[0]
            
        with col1:
            st.markdown(
                """
                <div style="background-color:#FFD54F; padding:20px; border-radius:12px;
                box-shadow: 2px 2px 8px rgba(0,0,0,0.2)">
                    <h4 style="color:#BF360C;">üìò Terminologia:</h4>
                    <ul style="color:#212121;">
                        <li><b>Gastos</b>
                            <ul>
                                <li>Custos</li>
                                <li>Despesas</li>
                                <li>Investimentos</li>
                                <li>Perda</li>
                            </ul>
                        </li>
                        <li><b>Desembolso* </b></li>
                    </ul>
                </div>
                """,
                unsafe_allow_html=True
            )

        plt.figure(figsize=(12, 10))
        ax = plt.gca()
        ax.axis('off')  # Desligar eixos
        
        # T√≠tulo principal
        plt.text(0.5, 0.95, 'Classifica√ß√µes dos Desembolsos', 
                 ha='center', va='center', fontsize=16, weight='bold')
        
        # Cores para categorias
        colors = ['#FFD54F', '#4FC3F7', '#AED581', '#7986CB', '#F06292']
        
        # Categorias principais (agrupando os itens fornecidos)
        categorias = {
            'Dedu√ß√µes': ['Impostos', 'Fretes', 'Devolu√ß√µes'],
            'Custos': {
                'Diretos': ['Mat√©ria-prima', 'Insumos'],
                'Indiretos': ['Energia el√©trica', 'Manuten√ß√£o']
            },
            'Despesas': ['Administrativas', 'Comerciais', 'Financeiras'],
            'Investimentos': ['Ativos Financeiros', 'Ativos Operacionais'],
            'Outros': ['Institutos', 'Disposi√ß√µes']
        }
        
        # Posicionamento das categorias
        positions = [(0.2, 0.7), (0.5, 0.7), (0.8, 0.7), (0.35, 0.4), (0.65, 0.4)]
        
        for (x, y), (cat_name, items), color in zip(positions, categorias.items(), colors):
            # Caixa principal da categoria
            main_box = FancyBboxPatch((x-0.15, y-0.05), 0.3, 0.1, 
                                     boxstyle="round,pad=0.03", 
                                     fc=color, ec='black', alpha=0.8)
            ax.add_patch(main_box)
            plt.text(x, y, cat_name, ha='center', va='center', fontsize=12, weight='bold')
            
            # Subitens
            if isinstance(items, dict):  # Para Custos que tem subcategorias
                for i, (subcat, subitems) in enumerate(items.items()):
                    # Linha de conex√£o
                    plt.plot([x, x-0.1+i*0.1], [y-0.05, y-0.15], 'k-', lw=0.5)
                    
                    # Caixa da subcategoria
                    sub_box = FancyBboxPatch((x-0.12+i*0.1, y-0.2), 0.15, 0.08,
                                           boxstyle="round,pad=0.02",
                                           fc=color, ec='black', alpha=0.6)
                    ax.add_patch(sub_box)
                    plt.text(x-0.05+i*0.1, y-0.16, subcat, ha='center', va='center', fontsize=9)
                    
                    # Itens da subcategoria
                    for j, item in enumerate(subitems):
                        plt.text(x-0.05+i*0.1, y-0.25-j*0.05, item, 
                                ha='center', va='center', fontsize=8)
            else:
                # Para categorias sem subn√≠veis
                for i, item in enumerate(items):
                    plt.plot([x, x], [y-0.05, y-0.15-i*0.05], 'k-', lw=0.5)
                    plt.text(x, y-0.2-i*0.05, item, ha='center', va='center', fontsize=9)
        
        # Adicionar legenda explicativa
        legenda = """Legenda:
        ‚Ä¢ Dedu√ß√µes: Gastos para realizar a venda
        ‚Ä¢ Custos: Gastos na produ√ß√£o de bens/servi√ßos
        ‚Ä¢ Despesas: Gastos com manuten√ß√£o da empresa
        ‚Ä¢ Investimentos: Expectativa de benef√≠cios futuros"""
        plt.text(0.05, 0.1, legenda, ha='left', va='top', fontsize=9, 
                 bbox=dict(facecolor='white', alpha=0.8, edgecolor='gray'))
        
        plt.tight_layout()
        #plt.savefig('classificacao_desembolsos.png', dpi=300, bbox_inches='tight')
        plt.show()

        st.divider()

        st.markdown("""
            *De acordo como Alves et al. (2018) "O gasto resulta em ‚Äúdesembolso‚Äù, no entanto, vale destacar que ambos possuem conceitos distintos, ou seja, nem todo o desembolso √© um gasto."
        
            Imagine dirigir uma empresa ‚Äî seja uma ind√∫stria, um com√©rcio, um neg√≥cio digital, um restaurante, uma cl√≠nica ou at√© uma reparti√ß√£o p√∫blica.  
            **Saber seus custos n√£o √© uma op√ß√£o. √â uma quest√£o de sobreviv√™ncia.**
            
            Sem isso, voc√™:
            
            - Pre√ßo errado seus produtos ou servi√ßos.
            - Desperdi√ßa recursos.
            - Perde competitividade.
            - E, pior, corre risco de quebrar... mesmo vendendo muito.
            
            üëâ Vamos come√ßar entendendo, de forma pr√°tica e direta, **o que s√£o custos, despesas e investimentos.**

            Ah! S√≥ pra constar... Alves et al. (2018) √© um livro e sua refer√™ncia completa √©: ALVES, Aline et al. **An√°lise de custo**. Porto Alegre: SAGAH, 2018.
        
            """)
        #Registra navega√ß√£o
        if st.button("‚úÖ Clique aqui se essa informa√ß√£o foi √∫til", key="intro_termos"):
             safe_log_interacao(nome_usuario, pagina_atual, "viu_intro_terminologia")

        # ‚úÖ Integra√ß√£o do v√≠deo
        st.video("https://youtu.be/9GUog7H4Bgk")
        
        st.markdown("""             
            Mais detalhes voc√™ pode ver [outro v√≠deo que mostra a diferen√ßa entre esses termos. **Clique aqui para acessar**](https://youtu.be/wvAMk9qGhoE?si=JzH89zq0ND1ij3Wt)

            Precisa ler mais sobre isso? Tem um texto do [Blog Razonet](https://razonet.com.br/blog/post/diferentes-tipos-de-gastos-custo-despesa-investimento-e-perda) que pode ser √∫til.
            """)
            
        st.divider()
        
        # üéØ Atividade Interativa 1: Verdadeiro ou Falso
        st.subheader("üéØ Quebre seus mitos sobre custos")
        
        with st.expander("üîç Clique aqui para testar seus conhecimentos"):
            perguntas = {
                "1Ô∏è‚É£ Custos e despesas s√£o a mesma coisa.": False,
                "2Ô∏è‚É£ Custos est√£o diretamente ligados √† opera√ß√£o do produto ou servi√ßo.": True,
                "3Ô∏è‚É£ Investimentos entram no c√°lculo de custos mensais.": False,
                "4Ô∏è‚É£ Uma empresa p√∫blica n√£o precisa se preocupar com custos.": False
            }
        
            respostas = {}
            for pergunta, correta in perguntas.items():
                respostas[pergunta] = st.radio(pergunta, ["Verdadeiro", "Falso"], index=None, key=pergunta)
        
            if st.button("üîç Verificar respostas"):
                acertos = 0
                for pergunta, correta in perguntas.items():
                    resposta_usuario = respostas[pergunta] == ("Verdadeiro" if correta else "Falso")
                    if resposta_usuario:
                        acertos += 1
                        st.success(f"‚úÖ {pergunta} ‚úîÔ∏è Correto!")
                    else:
                        st.error(f"‚ùå {pergunta} ‚ùå Incorreto.")
        
                st.info(f"üéØ Voc√™ acertou {acertos} de {len(perguntas)}.")
        
        st.divider()

        # üìö Resumo visual
        st.subheader("üó∫Ô∏è Mapa Mental de Custos")
        st.subheader("üîç Entendendo os conceitos fundamentais de **Gastos (Custos, Despesas, Investimentos e Perdas)**")
    
        st.markdown("""
        > Na gest√£o de custos, √© fundamental compreender como os diferentes tipos de gastos impactam a sa√∫de financeira de qualquer organiza√ß√£o ‚Äî seja ela uma ind√∫stria, com√©rcio, servi√ßo ou setor p√∫blico.
        
        """)
        
        st.divider()
        
        st.subheader("üìä **Mapa Conceitual dos Gastos**")
        
        # Criando o diagrama
        grafico = graphviz.Digraph()
        
        grafico.attr('node', shape='box', style='rounded, filled', fillcolor='#e8f4f8')
        
        grafico.node('G', 'Gastos')
        grafico.node('I', 'Investimentos\n(Gastos que ainda ser√£o usados para gerar receita)')
        grafico.node('C', 'Custo\n(Gastos que s√£o usados diretamente na opera√ß√£o)')
        grafico.node('D', 'Despesa\n(Gastos n√£o associados a atividade fim)')
        grafico.node('P', 'Perda\n(Gastos inesperados ou extraordin√°rios.)')
        
        # Liga√ß√µes principais
        grafico.edge('G', 'I', label='ainda ser√£o usados')
        grafico.edge('G', 'C', label='uso na opera√ß√£o')
        grafico.edge('G', 'D', label='foram usados para gerar receita')
        grafico.edge('G', 'P', label='n√£o geraram receita')
        
        # Adicionando impacto no resultado
        grafico.node('B', 'Balan√ßo Patrimonial\n(Bens, direitos e obriga√ß√µes)')
        grafico.edge('I', 'B', style='dashed')
        grafico.edge('C', 'B', style='dashed')
        
        # Adicionando impacto no resultado
        grafico.node('R', 'Dem. Resultado do Exderc√≠cio\n(impacto financeiro)')
        grafico.edge('D', 'R', style='dashed')
        grafico.edge('P', 'R', style='dashed')
        
        st.graphviz_chart(grafico)
        
        st.divider()
        
        # üèóÔ∏è Cen√°rios por setor
        st.subheader("üè¢ E na pr√°tica? Como isso aparece em diferentes setores?")
        
        setor = st.selectbox(
            "Escolha o setor para explorar:",
            ["Ind√∫stria", "Com√©rcio", "Servi√ßos", "Administra√ß√£o P√∫blica"], index=None
        )
        
        if setor == "Ind√∫stria":
            st.markdown("""
        - üè≠ **Custos:** Mat√©ria-prima, m√£o de obra da f√°brica, energia da produ√ß√£o, manuten√ß√£o das m√°quinas.  
        - üí∏ **Despesas:** Marketing, vendas, administrativo, RH, aluguel do escrit√≥rio.  
        - üíº **Investimentos:** Compra de m√°quinas, galp√µes, tecnologia de produ√ß√£o.  
        """)
        elif setor == "Com√©rcio":
            st.markdown("""
        - üè™ **Custos:** Compra de mercadorias para revenda, transporte dos produtos, armazenamento.  
        - üí∏ **Despesas:** Vendedores, propaganda, aluguel da loja, sistemas de gest√£o.  
        - üíº **Investimentos:** Reformas, expans√£o de lojas, aquisi√ß√£o de equipamentos.  
        """)
        elif setor == "Servi√ßos":
            st.markdown("""
        - üë©‚Äç‚öïÔ∏è **Custos:** Sal√°rio dos profissionais diretamente envolvidos na entrega (m√©dicos, professores, consultores), materiais usados na presta√ß√£o do servi√ßo.  
        - üí∏ **Despesas:** Publicidade, atendimento, suporte, administra√ß√£o, aluguel do escrit√≥rio.  
        - üíº **Investimentos:** Softwares, equipamentos especializados, estrutura f√≠sica.  
        """)
        elif setor == "Administra√ß√£o P√∫blica":
            st.markdown("""
        - üèõÔ∏è **Custos:** Recursos diretamente aplicados em servi√ßos p√∫blicos (sal√°rios de m√©dicos de hospitais p√∫blicos, professores de escolas p√∫blicas, manuten√ß√£o dos espa√ßos de atendimento).  
        - üí∏ **Despesas:** Atividades administrativas, suporte, gest√£o, auditoria, comunica√ß√£o.  
        - üíº **Investimentos:** Obras p√∫blicas, compra de ve√≠culos, constru√ß√£o de hospitais, sistemas tecnol√≥gicos.  
        """)
        else:
            st.markdown("""
            """)

        if st.button("Ouvir explica√ß√£o", key="audio1"):
            texto = "Terminologia: Custo √© o gasto relativo √† produ√ß√£o, Despesa √© o gasto com administra√ß√£o"
            leitor_de_texto(texto)
        st.markdown(""" <span style='color: #32CD32; font-weight: bold;'>
                TAREFA: FORMAR GRUPOS E REDIGIR UM TEXTO PARA INCLUIR EM √ÅUDIO </span>""", unsafe_allow_html=True)    
        st.divider()
        
        # üöÄ Desafio Pr√°tico
        st.subheader("üöÄ Mini Desafio: Identifique corretamente")
        
        with st.expander("üß† Clique para participar"):
            st.markdown("**Dado o seguinte item, como voc√™ denominaria?**")
            item = st.selectbox(
                "Item:",
                ["Compra de um ve√≠culo para transporte na empresa",
                 "Conta de energia el√©trica da f√°brica",
                 "Sal√°rio do gerente administrativo",
                 "Compra de mercadorias para revenda",
                 "Desenvolvimento de um novo software interno"], index=None
            )
        
            classificacao = st.radio(
                "Denomina√ß√£o:",
                ["Custo", "Despesa", "Investimento"], index=None
            )
        
            if st.button("‚úÖ Verificar a denomina√ß√£o"):
                respostas_certas = {
                    "Compra de um ve√≠culo para transporte na empresa": "Investimento",
                    "Conta de energia el√©trica da f√°brica": "Custo",
                    "Sal√°rio do gerente administrativo": "Despesa",
                    "Compra de mercadorias para revenda": "Custo",
                    "Desenvolvimento de um novo software interno": "Investimento"
                }
        
                correta = respostas_certas[item]
                if classificacao == correta:
                    st.success(f"üéâ Correto! {item} √© denominado como **{correta}**.")
                else:
                    st.error(f"‚ùå Ops! {item} √© na verdade **{correta}**.")
        
        st.divider()
        
        st.subheader("üöÄ **Desafio R√°pido!**")
        
        pergunta = st.radio(
            "üìå Imagine que sua empresa comprou um notebook para ser usado pela equipe de vendas. Isso √©:",
            ("Investimento", "Custo", "Despesa", "Perda"),
                index=None
        )
        
        if pergunta:
            if pergunta == "Investimento":
                st.success("‚úÖ Correto! Inicialmente √© um investimento, pois o bem ainda n√£o foi consumido.")
            else:
                st.error("‚ùå N√£o √© bem isso. Quando compramos um notebook, ele ainda n√£o foi usado, portanto √© um investimento.")
        
        st.markdown("---")
        
        st.subheader("üß† **Quer testar mais seu conhecimento?**")
        
        if st.button("Clique para mais desafios"):
            st.info("üëâ Em breve voc√™ poder√° acessar quizzes mais completos nesta plataforma!")
        st.markdown(" ")
        
        st.markdown("V√° para o topo dessa p√°gina e clique em **üìä Classifica√ß√£o** para continuar!")
        
        # Registra navega√ß√£o
        if st.button("‚úÖ Clique aqui se essa informa√ß√£o foi √∫til", key="tipos_gastos"):
            safe_log_interacao(nome_usuario, pagina_atual, "viu_tipos_gastos_introducao")

    with tab2:  # Classifica√ß√£o
        st.header("Classifica√ß√£o de Custos")
        
        st.markdown(
        """
        <div style="background-color:#4FC3F7; padding:20px; border-radius:12px;
        box-shadow: 2px 2px 8px rgba(0,0,0,0.2)">
            <h4 style="color:#01579B;">üìó O que vamos diferenciar?</h4>
            <ul style="color:#212121;">
                <li>Natureza: Diretos vs. Indiretos</li>
                <li>Volume: Fixos vs. Vari√°veis</li>
                <li>Aplica√ß√£o: Custos vs. Despesas</li>
            </ul>
        </div>
        """,
        unsafe_allow_html=True
        )

        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            **Por Natureza:**
            - Custos Diretos
            - Custos indiretos
            """)
        
        with col2:
            st.markdown("""
            **Por Comportamento:**
            - Fixos (n√£o variam com produ√ß√£o)
            - Vari√°veis (variam proporcionalmente)
            - Mistos (parte fixa + parte vari√°vel)
            """)

        # Introdu√ß√£o interativa
        with st.expander("üîç Por que classificar custos?", expanded=True):
            st.markdown("""
            **A classifica√ß√£o adequada dos custos permite:**
            - Tomada de decis√£o mais precisa
            - C√°lculo correto do custo dos produtos
            - Identifica√ß√£o de oportunidades de redu√ß√£o
            - Melhor planejamento or√ßament√°rio
            """)
            st.image("https://cdn-icons-png.flaticon.com/512/3144/3144456.png", width=100)
        
        # Abas para diferentes classifica√ß√µes
        tb1, tb2 = st.tabs(["üî∑ Natureza (Direto/Indireto)", "üìä Comportamento (Fixo/Vari√°vel)"])
        
        with tb1:
            st.subheader("Diretos vs. Indiretos")
            col1, _, col2 = st.columns([1.5, 0.5, 1.5])
            
            with col1:
                st.markdown("""
                **Custos Diretos:**
                - Identific√°veis diretamente no produto
                - Exemplos:
                  - Mat√©ria-prima espec√≠fica
                  - Embalagem do produto
                  - M√£o de obra dedicada
                """)
                
            with col2:
                st.markdown("""
                **Custos Indiretos:**
                - N√£o podem ser atribu√≠dos diretamente
                - Exemplos:
                  - Energia da f√°brica
                  - Aluguel do pr√©dio
                  - Limpeza geral
                """)
             
                
            # Dados personalizados por produto
            dados_produtos = {
                "Smartphone": {
                    "Direto": {
                        "Tela LCD": 120,
                        "Processador": 85,
                        "C√¢mera": 60,
                        "Bateria": 45
                    },
                    "Indireto": {
                        "Energia": 30,
                        "Deprecia√ß√£o": 15,
                        "Log√≠stica": 25,
                        "Embalagem": 10
                    }
                },
                "Notebook": {
                    "Direto": {
                        "Tela LED": 200,
                        "CPU": 150,
                        "GPU": 120,
                        "Mem√≥ria RAM": 80
                    },
                    "Indireto": {
                        "Manuten√ß√£o": 40,
                        "Transporte": 35,
                        "Impostos": 50,
                        "Seguro": 20
                    }
                },
                "Tablet": {
                    "Direto": {
                        "Tela Touch": 90,
                        "Chipset": 70,
                        "Alto-falante": 30,
                        "Conectividade": 25
                    },
                    "Indireto": {
                        "Pesquisa": 20,
                        "Marketing": 35,
                        "Armazenamento": 15,
                        "Suporte": 10
                    }
                }
            }
            
            # Interface no Streamlit
            st.title("Vejamos um exemplo pr√°tico")
            
            colx1, colx2 = st.columns([1, 3])
            
            with colx1:
                produto_selecionadox = st.selectbox(
                    "Selecione um produto para an√°lise:",
                    list(dados_produtos.keys()),
                    key="produto_selectx"
                )
            
            with colx2:
                # Prepara os dados para o DataFrame
                dados_formatados = []
                for tipo, itens in dados_produtos[produto_selecionadox].items():
                    for item, valor in itens.items():
                        dados_formatados.append({
                            "Tipo": tipo,
                            "Item": item,
                            "Valor": valor,
                            "Produto": produto_selecionadox
                        })
                
                df = pd.DataFrame(dados_formatados)
                
                # Cria o gr√°fico Sunburst
                fig = px.sunburst(
                    df,
                    path=['Tipo', 'Item'],
                    values='Valor',
                    color='Tipo',
                    color_discrete_map={'Direto': '#4CAF50', 'Indireto': '#FF9800'},
                    title=f"Composi√ß√£o de Custos - {produto_selecionadox}",
                    branchvalues='total'
                )
                
                # Ajustes de layout
                fig.update_layout(margin=dict(t=50, l=0, r=0, b=0))
                fig.update_traces(textinfo="label+percent parent", 
                                  hovertemplate='<b>Custo %{parent}</b><br><b>%{label}</b><br>Valor: R$ %{value:.2f}<extra></extra>')
                
                st.plotly_chart(fig, width='stretch')
                st.caption("üîé Clique no gr√°fico para explorar a composi√ß√£o detalhada")

                
            # Registra navega√ß√£o
            if st.button("‚úÖ Clique aqui se essa informa√ß√£o foi √∫til", key="classif_intro"):
                safe_log_interacao(nome_usuario, pagina_atual, "viu_classificacao_introducao")

            st.markdown("V√° no menu horizontal logo acima e clique em **üìä Comportamento (Fixo/Vari√°vel)** para continuar!")
                
        with tb2:
            st.subheader("Fixos vs. Vari√°veis")
            
            # Simulador interativo
            st.markdown("#### üìà Simulador de Comportamento de Custos")
            
            col_fv1, col_fv2 = st.columns(2)
            with col_fv1:
                custo_fixo = st.slider("Custo Fixo Mensal (R$)", 1000, 50000, 15000)
                custo_variavel_unit = st.slider("Custo Vari√°vel Unit√°rio (R$)", 5, 200, 50)
            
            with col_fv2:
                producao_min = st.slider("Produ√ß√£o M√≠nima (un)", 0, 500, 0)
                producao_max = st.slider("Produ√ß√£o M√°xima (un)", 500, 5000, 2000)
            
            # Gerar dados para o gr√°fico
            qtd_producao = list(range(producao_min, producao_max+1, 50))
            custo_total = [custo_fixo + custo_variavel_unit*q for q in qtd_producao]
            
            df = pd.DataFrame({
                "Quantidade": qtd_producao,
                "Custo Total": custo_total,
                "Custo Fixo": custo_fixo,
                "Custo Vari√°vel": [custo_variavel_unit*q for q in qtd_producao]
            })
            
            fig = px.line(
                df,
                x="Quantidade",
                y=["Custo Total", "Custo Fixo", "Custo Vari√°vel"],
                labels={"value": "Custo (R$)", "variable": "Tipo de Custo"},
                title="Comportamento dos Custos em Rela√ß√£o ao Volume de Produ√ß√£o"
            )
            
            st.plotly_chart(fig, use_container_width=True)
            
            # Exemplos pr√°ticos
            st.markdown("""
            **Exemplos Reais:**
            - üè≠ **Custo Fixo T√≠pico:** Aluguel da f√°brica, sal√°rios administrativos
            - üöö **Custo Vari√°vel T√≠pico:** Mat√©ria-prima, frete por unidade vendida
            - üí° **Custo Misto:** Energia (parte fixa + parte vari√°vel pelo uso)
            """)
            
            # Registra navega√ß√£o
            if st.button("‚úÖ Clique aqui se essa informa√ß√£o foi √∫til", key="cfcv_intro"):
                safe_log_interacao(nome_usuario, pagina_atual, "viu_cfcv_introducao")

            st.markdown("V√° para o topo dessa p√°gina e clique em **üìà Comportamento** para continuar!")
    
    with tab3:  # Comportamento
        st.title("‚öñÔ∏è Diferen√ßa entre Custos e Despesas")
        st.subheader("üîç Como os custos e as despesas impactam o resultado da empresa?")
        
        st.markdown("""
        > Entender a diferen√ßa entre **custos** e **despesas** √© essencial para uma boa gest√£o financeira. Cada um tem um papel espec√≠fico na forma√ß√£o do resultado da empresa.
        
        """)
        
        st.divider()
        
        st.subheader("üìä **Rela√ß√£o dos Processos com Custos e Despesas**")
        
        # Criando o diagrama
        grafico = graphviz.Digraph()
        
        grafico.attr('node', shape='box', style='rounded, filled', fillcolor='#f0f9f9')
        
        # Processos
        grafico.node('Prod', 'üîß Processo Produtivo')
        grafico.node('RH', 'üë• Recursos Humanos')
        grafico.node('Mkt', 'üì¢ Marketing')
        grafico.node('Fin', 'üí∞ Finan√ßas')
        grafico.node('Adm', 'üìë Administrativo')
        grafico.node('Outros', '‚ûï Outros')
        
        # Receita e resultado
        grafico.node('Rec', 'üíµ Receita\n(-) Custo das Mercadorias Vendidas\n= Lucro Bruto\n(-) Despesas Operacionais\n= Lucro Operacional', shape='rectangle', fillcolor='#d0eafc')
        
        # Conex√µes
        grafico.edge('Prod', 'Rec', label='‚û°Ô∏è Custo')
        grafico.edge('RH', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Mkt', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Fin', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Adm', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Outros', 'Rec', label='‚û°Ô∏è Despesa')
        
        st.graphviz_chart(grafico)
        
        st.divider()
        
        st.subheader("üí° **Conceituando:**")
        
        st.markdown("""
        ### ‚úîÔ∏è **Custos**
        - S√£o todos os gastos diretamente relacionados com o processo produtivo ou com a entrega do servi√ßo.
        - Quando mais a produ√ß√£o ou venda cresce, mais os custos tendem a aumentar proporcionalmente.
        - ‚ûï **Exemplos:** mat√©ria-prima, sal√°rios da produ√ß√£o, deprecia√ß√£o de m√°quinas, compra de mercadorias para revenda.
        
        ### ‚úîÔ∏è **Despesas**
        - S√£o gastos necess√°rios para manter a estrutura administrativa, comercial e de apoio, mas **n√£o est√£o diretamente ligados √† produ√ß√£o**.
        - ‚ûï **Exemplos:** sal√°rios da administra√ß√£o, despesas de marketing, aluguel da sede, energia da √°rea administrativa, honor√°rios da contabilidade.
        """)
    
        st.divider()
        
        st.subheader("üß† **Impacto na Demonstra√ß√£o do Resultado:**")
        
        st.markdown("""
        - üè≠ **Custos** afetam o **Lucro Bruto**:
          > Receita - **Custo das Mercadorias Vendidas** = **Lucro Bruto**
        
        - üè¢ **Despesas** afetam o **Lucro Operacional**:
          > Lucro Bruto - **Despesas Operacionais** = **Lucro Operacional**
        """)
        
        st.divider()
        
        st.subheader("üöÄ **Desafio Interativo!**")
        
        pergunta = st.radio(
            "Imagine que uma empresa contratou uma ag√™ncia de marketing para fazer campanhas nas redes sociais. Esse gasto √©:",
            ("Custo", "Despesa"), index=None
        )
        
        if pergunta:
            if pergunta == "Despesa":
                st.success("‚úÖ Correto! Marketing √© uma despesa, pois n√£o est√° diretamente ligado √† produ√ß√£o.")
            else:
                st.error("‚ùå N√£o √© isso. Marketing n√£o √© custo, pois n√£o faz parte diretamente do processo produtivo.")
        
        st.markdown("---")
        
        st.subheader("üéØ **Mais Desafios?**")
        
        if st.button("Quero mais perguntas!"):
            st.info("Em breve teremos quizzes completos aqui na plataforma!")
        
        st.info("""
        Se voc√™ entende essa diferen√ßa, j√° est√° √† frente de muitos gestores no mercado.
        """)
        
        st.title("‚öñÔ∏è Custos x Despesas e seus impactos na DRE")
        
        st.subheader("üîç Como custos e despesas se refletem no resultado da empresa?")
        
        st.markdown("""
        > Antes de tudo, precisamos entender que **custos** e **despesas** n√£o s√£o apenas conceitos cont√°beis ‚Äî eles impactam diretamente os resultados financeiros da empresa, especialmente na **Demonstra√ß√£o do Resultado (DRE)**.
        """)
        
        st.divider()
        
        st.subheader("üìä **Rela√ß√£o dos Processos com Custos, Despesas e a DRE**")
        
        # Criando o diagrama
        grafico = graphviz.Digraph()
        
        grafico.attr('node', shape='box', style='rounded, filled', fillcolor='#f0f9f9')
        
        # Processos
        grafico.node('Prod', 'üîß Processo Produtivo\n(Custos)')
        grafico.node('RH', 'üë• Recursos Humanos\n(Despesas)')
        grafico.node('Mkt', 'üì¢ Marketing\n(Despesas)')
        grafico.node('Fin', 'üí∞ Finan√ßas\n(Despesas)')
        grafico.node('Adm', 'üìë Administrativo\n(Despesas)')
        grafico.node('Outros', '‚ûï Outros\n(Despesas)')
        
        # Receita e DRE
        grafico.node('Rec', '''üíµ Receita
        (-) Custo das Mercadorias Vendidas
        = Lucro Bruto
        (-) Despesas Operacionais
        = Lucro Operacional''', shape='rectangle', fillcolor='#d0eafc')
        
        # Conex√µes
        grafico.edge('Prod', 'Rec', label='‚û°Ô∏è Custo (CMV)')
        grafico.edge('RH', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Mkt', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Fin', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Adm', 'Rec', label='‚û°Ô∏è Despesa')
        grafico.edge('Outros', 'Rec', label='‚û°Ô∏è Despesa')
        
        st.graphviz_chart(grafico)
        
        st.divider()
        
        st.subheader("üí° **Conceituando:**")
        
        st.markdown("""
        ### ‚úîÔ∏è **Custos**
        - üîß S√£o os gastos **diretamente ligados** √† produ√ß√£o de bens ou servi√ßos, ou √† compra de mercadorias para revenda.
        - ‚ûï **Exemplos:** mat√©ria-prima, sal√°rios da produ√ß√£o, energia da f√°brica, deprecia√ß√£o de m√°quinas, custo de mercadorias para revenda.
        - üîç **Na DRE:** aparecem no grupo **"Custo das Mercadorias Vendidas (CMV)"**, **reduzindo a Receita para gerar o Lucro Bruto.**
        
        ---
        
        ### ‚úîÔ∏è **Despesas**
        - üè¢ S√£o os gastos necess√°rios para **manter a estrutura administrativa, comercial e de suporte**, mas **n√£o est√£o diretamente ligados √† produ√ß√£o.**
        - ‚ûï **Exemplos:** sal√°rios da administra√ß√£o, marketing, despesas financeiras, aluguel da sede, servi√ßos cont√°beis, despesas com TI.
        - üîç **Na DRE:** aparecem no grupo **"Despesas Operacionais"**, sendo deduzidas do **Lucro Bruto** para se chegar ao **Lucro Operacional.**
        """)
        
        st.divider()
        
        st.subheader("üìà **Vis√£o simplificada da DRE:**")
        st.markdown("""
        A **Demonstra√ß√£o do Resultado do Exerc√≠cio (DRE)** mostra o caminho do dinheiro na empresa:  
        Das **Receitas**, subtra√≠mos os **Custos** e as **Despesas**, chegando ao **Lucro ou Preju√≠zo**.
        
        Vamos visualizar como isso funciona:
        """)
        
        # üî∑ Layout visual da DRE
        st.markdown("---")
        st.markdown("### üî∑ **Estrutura da DRE:**")
        
        # Receita
        st.markdown("""
        <div style="background-color:#81C784; padding:15px; border-radius:10px;">
            <h4 style="color:#1B5E20;">üöÄ Receita Bruta</h4>
            <p style="color:#212121;">Tudo que a empresa recebe pelas vendas de seus produtos ou servi√ßos.</p>
        </div>
        """, unsafe_allow_html=True)
        
        # (-) Custos
        st.markdown("""
        <div style="background-color:#FFB74D; padding:15px; border-radius:10px;">
            <h4 style="color:#E65100;">‚öôÔ∏è (-) Custos dos Produtos ou Servi√ßos</h4>
            <p style="color:#212121;">S√£o os gastos diretamente relacionados √† produ√ß√£o ou entrega do servi√ßo.</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <h3 style="text-align:center;">= Lucro Bruto</h3>
        """, unsafe_allow_html=True)
        
        # (-) Despesas
        st.markdown("""
        <div style="background-color:#64B5F6; padding:15px; border-radius:10px;">
            <h4 style="color:#0D47A1;">üßæ (-) Despesas Operacionais</h4>
            <p style="color:#212121;">Gastos administrativos, comerciais, marketing, vendas, etc.</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <h3 style="text-align:center;">= Resultado Operacional</h3>
        """, unsafe_allow_html=True)
        
        # Resultado
        st.markdown("""
        <div style="background-color:#FFD54F; padding:15px; border-radius:10px;">
            <h4 style="color:#F57F17;">üí∞ Lucro ou Preju√≠zo</h4>
            <p style="color:#212121;">Resultado final ap√≥s considerar receitas, custos e despesas.</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("---")
        
        # üî• Desafio pr√°tico ‚Äî Montar a DRE
        
        st.markdown("## üß† **Desafio: Monte sua pr√≥pria DRE!**")
        
        with st.expander("üöÄ Clique aqui para testar sua compreens√£o"):
            st.markdown("Associe corretamente cada item √† sua posi√ß√£o na DRE:")
        
            itens_dre = {
                "üí∞ Venda de produtos ou servi√ßos": "Receita",
                "üõ†Ô∏è Compra de mat√©ria-prima": "Custo",
                "üîå Energia el√©trica da f√°brica": "Custo",
                "üè¢ Aluguel do escrit√≥rio": "Despesa",
                "üß† Sal√°rio do administrativo": "Despesa",
                "üöõ Frete pago para entregar mercadorias": "Custo",
                "üõí Comiss√£o de vendedores": "Despesa",
            }
        
            acertos = 0
            for item, resposta_correta in itens_dre.items():
                resposta = st.radio(
                    f"{item}",
                    ["Receita", "Custo", "Despesa"],
                    index=None,
                    key=item
                )
                if resposta:
                    if resposta == resposta_correta:
                        st.success(f"‚úÖ Correto!")
                        acertos += 1
                    else:
                        st.error(f"‚ùå Incorreto. A resposta certa √©: **{resposta_correta}**")
        
            if acertos == len(itens_dre):
                st.balloons()
                st.success("üéâ Excelente! Voc√™ classificou tudo corretamente!")
            elif acertos > 0:
                st.info(f"üëç Voc√™ acertou {acertos} de {len(itens_dre)}.")
            else:
                st.warning("üöÄ Vamos come√ßar! Classifique os itens acima.")
        
        # üîó Conclus√£o
        st.markdown("""
        > üí° Perceba como a estrutura da DRE ajuda a entender **onde est√£o os maiores gastos e como se forma o lucro da empresa.**  
        > Isso vale para empresas privadas, p√∫blicas, ONGs e qualquer organiza√ß√£o!
        """)    
        st.markdown("""
        """)
        
        st.divider()
        
        st.subheader("üöÄ **Desafio Interativo!**")
        
        pergunta = st.radio(
            "üì¢ A empresa paga aluguel da sua sede administrativa. Esse gasto √© considerado:",
            ("Custo", "Despesa"), index=None
        )
        
        if pergunta:
            if pergunta == "Despesa":
                st.success("‚úÖ Correto! √â uma despesa, pois n√£o est√° diretamente ligado √† produ√ß√£o, mas sim ao suporte da opera√ß√£o.")
            else:
                st.error("‚ùå Incorreto. O aluguel da sede administrativa n√£o faz parte do custo de produ√ß√£o.")
        
        st.markdown("---")
        
        st.subheader("üéØ **Mais desafios ou simula√ß√µes?**")
        
        if st.button("Quero simular uma DRE!"):
            st.info("üîß Em breve vamos incluir uma planilha simuladora da DRE, mostrando como custos e despesas impactam o resultado.")
    
        # Quiz interativo
        with st.expander("üß© Teste Seu Conhecimento"):
            resposta = st.radio(
                "O sal√°rio do supervisor de produ√ß√£o √© classificado como:",
                ["Custo Direto", "Custo Indireto", "Despesa"],
                index=None
            )
            if resposta:
                if resposta == "Custo Indireto":
                    st.success("‚úÖ Correto! √â um custo indireto pois beneficia toda a produ√ß√£o.")
                else:
                    st.error("‚ùå Revise a classifica√ß√£o de custos indiretos")
                
        
        st.header("üìä An√°lise [Simples] de Impacto de Custos")
        st.markdown("""
            ```math
            Custo\ Total = Custo\ Fixo + (Custo\ Vari√°vel\ Unit√°rio √ó Quantidade)
            ```

            
            ```math
            Ponto\ de\ Equil√≠brio = (Custo\ Total + Despesas) / (PV - CVU)
            ```
        """)

        # Comportamento dos Custos
        c1, c2 = st.columns([1, 3])
        with c1:
        # Controles interativos
            st.markdown("""
            """)
        
        with c2:
            st.subheader("Par√¢metros de Entrada")
            cf = st.slider("Custos Fixos (R$):", 1000, 50000, 10000, 500, 
                          help="Custos que n√£o variam com o volume de produ√ß√£o")
            cv = st.slider("Custo Vari√°vel Unit√°rio (R$):", 1, 100, 15, 1,
                          help="Custo adicional por unidade produzida")
            q = st.slider("Quantidade Produzida:", 0, 1000, 200, 10,
                         help="Volume total de unidades produzidas")
            d = st.slider("Despesas (R$):", 1000, 50000, 10000, 500, 
                         help="Total de Despesas")
            p = st.slider("Pre√ßo de venda:", 1, 100, 20, 1,
                         help="Pre√ßo unit√°rio do produto")
        
        # C√°lculos
        ct = cf + (cv * q)
        custo_medio = ct / q if q > 0 else 0
        
        # M√©tricas
        st.divider()
        col_met1, col_met2 = st.columns(2)
        with col_met1:
            st.metric("Custo Total Estimado", f"R$ {ct:,.2f}", 
                     help="Soma de custos fixos e vari√°veis totais")
        with col_met2:
            st.metric("Custo M√©dio por Unidade", f"R$ {custo_medio:,.2f}" if q > 0 else "N/A",
                     help="Custo total dividido pela quantidade produzida")
        
        col_met3, col_met4 = st.columns(2)
        with col_met3:
            percent_var = (cv * q) / ct * 100
            st.metric("Participa√ß√£o dos Custos Vari√°veis", f"{percent_var:.1f}%",
                     help="Quanto do custo total √© vari√°vel")
        with col_met4:
            if p > cv:
                peq = (cf+d)/(p-cv)
                st.metric("Ponto de Equil√≠brio", f"{int(peq)} unidades",
                     help="Quantidade necess√°ria para cobrir todos os custos")
            elif p == cv:
                st.markdown("""
                Ponto de Equil√≠brio = ERRO!<br>(Pre√ßo de Venda = Custo Unit√°rio)
                """, unsafe_allow_html=True)
            else:
                st.markdown("""
                CUIDADO! (Pre√ßo de Venda abaixo do Custo Unit√°rio)
                """)
            
        # An√°lise de sensibilidade
        st.divider()
        st.subheader("üîç An√°lise de Sensibilidade")
        
        # Simula√ß√£o de diferentes quantidades
        q_range = np.linspace(0, q*2, 50)
        ct_range = cf + (cv * q_range)
        cm_range = ct_range / np.where(q_range > 0, q_range, 1)
        
        t1, t2 = st.tabs(["Gr√°fico de Custos", "Tabela de Dados"])
        
        with t1:
            fig = px.line(x=q_range, y=ct_range, 
                         labels={'x': 'Quantidade Produzida', 'y': 'Custo Total (R$)'},
                         title="Rela√ß√£o entre Quantidade e Custo Total")
            fig.add_vline(x=q, line_dash="dash", line_color="red",
                         annotation_text=f"Quantidade Atual: {q}", 
                         annotation_position="top left")
            fig.update_layout(hovermode="x unified")
            st.plotly_chart(fig, use_container_width=True)
        
        with t2:
            df = pd.DataFrame({
                'Quantidade': q_range.astype(int),
                'Custo Total': ct_range,
                'Custo M√©dio': cm_range
            })
            st.dataframe(df.style.format({
                'Custo Total': 'R$ {:,.2f}',
                'Custo M√©dio': 'R$ {:,.2f}'
            }), use_container_width=True)
        
        # An√°lise de cen√°rios
        st.divider()
        st.subheader("üåê An√°lise de Cen√°rios")
        
        scenarios = {
            "Otimista (CV -20%)": cv * 0.8,
            "Atual": cv,
            "Pessimista (CV +20%)": cv * 1.2
        }
        
        scenario_data = []
        for name, cv_scenario in scenarios.items():
            ct_scenario = cf + (cv_scenario * q)
            scenario_data.append({
                "Cen√°rio": name,
                "Custo Vari√°vel Unit√°rio": cv_scenario,
                "Custo Total": ct_scenario,
                "Diferen√ßa": ct_scenario - ct
            })
        
        df_scenarios = pd.DataFrame(scenario_data)
                
        fig2 = px.bar(df_scenarios, x='Cen√°rio', y='Custo Total',
                     color='Cen√°rio',
                     title="Compara√ß√£o de Cen√°rios",
                     text=[f"R$ {x:,.2f}" for x in df_scenarios['Custo Total']])
        fig2.update_layout(showlegend=False)
        st.plotly_chart(fig2, use_container_width=True)

        st.markdown("**Impacto de Varia√ß√µes no Custo Vari√°vel**")
        st.dataframe(df_scenarios.style.format({
            "Custo Vari√°vel Unit√°rio": "R$ {:.2f}",
            "Custo Total": "R$ {:,.2f}",
            "Diferen√ßa": "R$ {:,.2f}"
        }), hide_index=True, use_container_width=True)

        # Explica√ß√£o dos conceitos
        with st.expander("üìö Explica√ß√£o dos Conceitos"):
            st.markdown("""
            **An√°lise de Impacto de Custos**:
            - **Custo Fixo**: Despesas que n√£o mudam com o volume de produ√ß√£o (aluguel, sal√°rios)
            - **Custo Vari√°vel**: Custos diretamente ligados √† produ√ß√£o (mat√©ria-prima, embalagem)
            - **Ponto de Equil√≠brio**: Quantidade de vendas necess√°ria para cobrir todos os custos (fixos + vari√°veis) e despesas
            
            **An√°lise de Sensibilidade** mostra como mudan√ßas nos par√¢metros afetam os resultados.
            """)

        st.markdown("""E a√≠?! **J√° domina os termos b√°sicos da gest√£o de custos**???<br> 
        Se est√° ok, vamos ent√£o verificar se isso √© verdade? Clique em **üß† Quiz** no topo dessa p√°gina e bora mostrar que voc√™ √© TOP!""", unsafe_allow_html=True)
        
        # Registra navega√ß√£o
        if st.button("‚úÖ Clique aqui se essa informa√ß√£o foi √∫til", key="desafios_intro"):
            safe_log_interacao(nome_usuario, pagina_atual, "viu_desafios_introducao")

        # üîú Bot√£o para pr√≥xima p√°gina
        st.markdown(" ")
        if st.button("üëâ Avan√ßar para o pr√≥ximo t√≥pico: Conhecer o M√©todo de Custeio por Absor√ß√£o"):
            st.switch_page("pages/3_üìä_Custeio_por_Absorcao.py")

    with tab4:  # Quiz
        st.header("üß† Quiz Interativo: Terminologia e Comportamento de Custos")
        
        # Inicializa√ß√£o da sess√£o para controle
        if "pontuacao" not in st.session_state:
            st.session_state.pontuacao = 0
        if "respostas_usuario" not in st.session_state:
            st.session_state.respostas_usuario = {}
        if "quiz_reiniciar" not in st.session_state:
            st.session_state.quiz_reiniciar = False
        
        # Fun√ß√£o para reiniciar o quiz
        def reiniciar_quiz():
            st.session_state.pontuacao = 0
            st.session_state.respostas_usuario.clear()
                
        # --- QUIZ MULTIPLA ESCOLHA - PARTE 1 ---
        st.subheader("üéØ Parte 1: Conceitos B√°sicos")
        with st.expander("üîç Clique aqui para responder ao primeiro bloco", expanded=False):
            perguntas_parte1 = [
                {
                    "pergunta": "Qual das alternativas representa um investimento?",
                    "opcoes": ["A) Deprecia√ß√£o de equipamentos", "B) Sal√°rio dos vendedores", "C) Aquisi√ß√£o de uma nova m√°quina", "D) Conta de luz da sede", "E) Gasto com propaganda"],
                    "correta": "C",
                    "tema": "Terminologia"
                },
                {
                    "pergunta": "O que √© considerado custo direto?",
                    "opcoes": ["A) Aluguel da f√°brica", "B) Materiais utilizados na produ√ß√£o", "C) Despesa com marketing", "D) Custo com energia el√©trica", "E) Impostos sobre vendas"],
                    "correta": "B",
                    "tema": "Natureza de Custos"
                },
                {
                    "pergunta": "Como s√£o classificados os custos que permanecem constantes mesmo com aumento da produ√ß√£o?",
                    "opcoes": ["A) Vari√°veis", "B) Semi-vari√°veis", "C) Fixos", "D) Diretos", "E) Indiretos"],
                    "correta": "C",
                    "tema": "Classifica√ß√£o de Custos"
                },
                {
                    "pergunta": "Qual √© um exemplo de desembolso?",
                    "opcoes": ["A) Deprecia√ß√£o", "B) Compra de mat√©ria-prima √† vista", "C) Amortiza√ß√£o", "D) Juros sobre capital pr√≥prio", "E) Perda por obsolesc√™ncia"],
                    "correta": "B",
                    "tema": "Terminologia"
                },
                {
                    "pergunta": "O comportamento de custo vari√°vel significa que ele:",
                    "opcoes": ["A) N√£o muda com a produ√ß√£o", "B) √â sempre fixo por unidade", "C) Aumenta proporcionalmente ao volume produzido", "D) Diminui com o tempo", "E) √â irrelevante para decis√£o"],
                    "correta": "C",
                    "tema": "Comportamento de Custos"
                }
            ]
        
            for i, p in enumerate(perguntas_parte1):
                resposta = st.radio(p["pergunta"], p["opcoes"], index=None, key=f"parte1_p{i}")
                st.session_state.respostas_usuario[i] = resposta
        
        # --- QUIZ MULTIPLO ESCOLHA - PARTE 2 ---
        st.subheader("üéØ Parte 2: Classifica√ß√£o e Comportamento de Custos")
        with st.expander("üîç Clique aqui para responder ao segundo bloco", expanded=False):
            perguntas_parte2 = [
                {
                    "pergunta": "Deprecia√ß√£o de m√°quinas √© considerada um custo:",
                    "opcoes": ["A) Direto", "B) Vari√°vel", "C) Indireto", "D) Despesa", "E) Investimento"],
                    "correta": "C",
                    "tema": "Natureza de Custos"
                },
                {
                    "pergunta": "Materiais diretos fazem parte da natureza dos custos de:",
                    "opcoes": ["A) Administra√ß√£o", "B) Vendas", "C) Produ√ß√£o", "D) Marketing", "E) Finan√ßas"],
                    "correta": "C",
                    "tema": "Natureza de Custos"
                },
                {
                    "pergunta": "Sobre o custo semi-vari√°vel, √© correto afirmar:",
                    "opcoes": ["A) √â totalmente fixo", "B) Varia somente com grandes altera√ß√µes de produ√ß√£o", "C) Possui parte fixa e parte vari√°vel", "D) Sempre √© indireto", "E) Nunca aparece nos relat√≥rios financeiros"],
                    "correta": "C",
                    "tema": "Comportamento de Custos"
                },
                {
                    "pergunta": "Custos fixos unit√°rios:",
                    "opcoes": ["A) Aumentam conforme a produ√ß√£o", "B) Diminuem com o aumento da produ√ß√£o", "C) S√£o sempre zero", "D) S√£o iguais aos custos vari√°veis", "E) N√£o existem"],
                    "correta": "B",
                    "tema": "Comportamento de Custos"
                },
                {
                    "pergunta": "Perdas s√£o definidas como:",
                    "opcoes": ["A) Gastos normais da opera√ß√£o", "B) Eventos anormais e involunt√°rios", "C) Custos fixos de longo prazo", "D) Investimentos n√£o planejados", "E) Despesas estrat√©gicas"],
                    "correta": "B",
                    "tema": "Terminologia"
                }
            ]
        
            for i, p in enumerate(perguntas_parte2):
                resposta = st.radio(p["pergunta"], p["opcoes"], index=None, key=f"parte2_p{i}")
                st.session_state.respostas_usuario[len(perguntas_parte1) + i] = resposta
        
        # --- VERIFICAR TODAS AS RESPOSTAS ---
        if st.button("üîç Verificar respostas", key="verificar_respostas"):
            total_acertos = 0
            todas_perguntas = perguntas_parte1 + perguntas_parte2
        
            for idx, p in enumerate(todas_perguntas):
                resposta_usuario = st.session_state.respostas_usuario.get(idx)
                if resposta_usuario and resposta_usuario[0] == p["correta"]:
                    total_acertos += 1
                    st.success(f"‚úÖ Correto! ({p['tema']})")
                else:
                    st.error(f"‚ùå Incorreto. Resposta correta: {p['correta']} ‚Äî {p['opcoes'][ord(p['correta']) - ord('A')]}. Justificativa: Veja o conte√∫do relacionado a '{p['tema']}'.")
        
            st.session_state.pontuacao = total_acertos
            st.info(f"üéØ Voc√™ acertou **{total_acertos} de {len(todas_perguntas)}**.")
    
        
        # --- FEEDBACK MOTIVACIONAL ---
        if st.session_state.pontuacao > 0:
            st.markdown("---")
            st.subheader("üèÜ Resultado Final")
        
            col1, col2 = st.columns([3, 1])
            with col1:
                if st.session_state.pontuacao == len(todas_perguntas):
                    st.balloons()
                    st.success("üéâ Excelente! Voc√™ domina o tema!")
                elif st.session_state.pontuacao >= 7:
                    st.info("üëç Parab√©ns! Voc√™ est√° no caminho certo.")
                else:
                    st.warning("üí° Que tal revisar os conceitos de custos e terminologia?")
            with col2:
                st.metric(label="Pontua√ß√£o", value=f"{st.session_state.pontuacao}/{len(todas_perguntas)}")
        
            # Sugest√µes de estudo
            if st.session_state.pontuacao < len(todas_perguntas):
                temas_a_estudar = set()
                for idx, p in enumerate(todas_perguntas):
                    resposta_usuario = st.session_state.respostas_usuario.get(idx)
                    if resposta_usuario and resposta_usuario[0] != p["correta"]:
                        temas_a_estudar.add(p["tema"])
                if temas_a_estudar:
                    st.markdown("üìå **Sugest√µes de revis√£o:**")
                    for tema in temas_a_estudar:
                        st.markdown(f"- Revisar: **{tema}**")
                else:
                    st.markdown("‚úÖ Voc√™ acertou todas as perguntas!")

        # Registra navega√ß√£o
        if st.button("‚úÖ Clique aqui se voc√™ fez o Quiz", key="quiz_intro"):
            safe_log_interacao(nome_usuario, pagina_atual, "fez_quiz_introducao")
    
        # --- BOT√ÉO PARA REINICIAR ---
        if st.button("üîÅ Reiniciar Quiz", key="reiniciar_quiz", on_click=reiniciar_quiz):
            st.rerun()            
            
if __name__ == "__main__":
    main()
